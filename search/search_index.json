{"config":{"lang":["zh","en","ja"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to lingyu's note!","text":"<p> \u7ea6 64 \u4e2a\u5b57 </p> <p>\u4ec5\u7528\u4f5c\u4e2a\u4eba\u5b66\u4e60\u8bb0\u5f55</p> <p>Don't just read it; fight it!</p> <p>Ask your own questions,</p> <p>look for your own examples,</p> <p>discover your own proofs. </p> <p>Is the hypothesis necessary?</p> <p>Is the converse true?</p> <p>What happens in the classical special case? </p> <p>What about the degenerate cases? </p> <p>Where does the proof use the hypothesis?</p> <p>\u2014\u2014 Paul Halmos</p>"},{"location":"ICS/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E5%AE%9E%E9%AA%8C/","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840\u5b9e\u9a8c","text":"<p> \u7ea6 11 \u4e2a\u5b57 </p>"},{"location":"ICS/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E5%AE%9E%E9%AA%8C/#_1","title":"\u8d44\u6599","text":"<ul> <li>\u8bfe\u7a0b\u7f51\u7ad9</li> <li>\u5b9e\u9a8c\u7f51\u7ad9</li> <li>video</li> </ul>"},{"location":"Linux/Linux/","title":"Linux","text":"<p> \u7ea6 1505 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p>"},{"location":"Linux/Linux/#learning-material","title":"Learning Material","text":"<ol> <li>\u5144\u5f1f\u8fdeLinux\u6559\u7a0b\uff0c\u53c2\u8003\u7b14\u8bb0</li> </ol>"},{"location":"Linux/Linux/#linux-vs-windows","title":"Linux vs Windows","text":"<ol> <li> <p>Linux\u548cWindows\u5bf9\u6bd4\uff1a</p> Linux Windows Note cat a.csv type a.csv \u6253\u5370\u6587\u4ef6\u5185\u5bb9 ls dir \u770b\u76ee\u5f55\u4e0b\u7684\u6709\u54ea\u4e9b\u6587\u4ef6 <ul> <li>Linux\u7684cmd\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u800cWindows\u4e0d\u533a\u5206</li> <li>Linux\u6240\u6709\u5185\u5bb9\u4ee5\u6587\u4ef6\u5f62\u5f0f\u4fdd\u5b58\uff0c\u5305\u62ec\u786c\u4ef6\uff0c\u4f8b\u5982\u786c\u76d8\u662f/dev/sd[a-p]</li> <li>Linux\u662f\u4e0d\u9760\u6269\u5c55\u540d\u6765\u533a\u5206\u6587\u4ef6\u7684\uff0c\u5c11\u6570\u6709\u6269\u5c55\u540d\u7684\u6587\u4ef6\u4ec5\u4ec5\u662f\u4e3a\u4e86\u6211\u4eec\u81ea\u5df1\u65b9\u4fbf\u533a\u5206\u800c\u5df2</li> </ul> </li> </ol>"},{"location":"Linux/Linux/#linux_1","title":"Linux\u76ee\u5f55","text":"<ol> <li> <p>Linux\u5404\u76ee\u5f55\u7684\u4f5c\u7528\uff1a</p> \u76ee\u5f55 \u4f5c\u7528 /bin \u5b58\u653e\u7cfb\u7edf\u547d\u4ee4\u7684\u76ee\u5f55\uff0c\u666e\u901a\u7528\u6237\u548c\u8d85\u7ea7\u7528\u6237\u90fd\u53ef\u4ee5\u6267\u884c\u3002\u4e0d\u8fc7\u653e\u5728/bin\u4e0b\u7684\u547d\u4ee4\u5728\u5355\u7528\u6237\u6a21\u5f0f\u4e0b\u4e5f\u53ef\u4ee5\u6267\u884c /sbin \u4fdd\u5b58\u548c\u7cfb\u7edf\u73af\u5883\u8bbe\u7f6e\u76f8\u5173\u7684\u547d\u4ee4\uff0c\u53ea\u6709\u8d85\u7ea7\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u547d\u4ee4\u8fdb\u884c\u7cfb\u7edf\u73af\u5883\u8bbe\u7f6e\uff0c\u4f46\u662f\u6709\u4e9b\u547d\u4ee4\u53ef\u4ee5\u5141\u8bb8\u666e\u901a\u7528\u6237\u67e5\u770b /usr/bin \u5b58\u653e\u7cfb\u7edf\u547d\u4ee4\u7684\u76ee\u5f55\uff0c\u666e\u901a\u7528\u6237\u548c\u8d85\u7ea7\u7528\u6237\u90fd\u53ef\u4ee5\u6267\u884c\u3002\u8fd9\u4e9b\u547d\u4ee4\u548c\u7cfb\u7edf\u542f\u52a8\u65e0\u5173\uff0c\u5728\u5355\u7528\u6237\u6a21\u5f0f\u4e0b\u4e0d\u80fd\u6267\u884c /usr/sbin \u5b58\u653e\u6839\u6587\u4ef6\u7cfb\u7edf\u4e0d\u5fc5\u8981\u7684\u7cfb\u7edf\u7ba1\u7406\u547d\u4ee4\uff0c\u4f8b\u5982\u591a\u6570\u670d\u52a1\u7a0b\u5e8f\u3002\u53ea\u6709\u8d85\u7ea7\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u3002\u5927\u5bb6\u5176\u5b9e\u53ef\u4ee5\u6ce8\u610f\u5230Linux\u7684\u7cfb\u7edf\uff0c\u5728\u6240\u6709\"sbin\"\u76ee\u5f55\u4e2d\u4fdd\u5b58\u7684\u547d\u4ee4\u53ea\u6709\u8d85\u7ea7\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\uff0c\"bin\"\u76ee\u5f55\u4e2d\u4fdd\u5b58\u7684\u547d\u4ee4\u6240\u6709\u7528\u6237\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002 /boot \u7cfb\u7edf\u542f\u52a8\u76ee\u5f55\uff0c\u4fdd\u5b58\u7cfb\u7edf\u542f\u52a8\u76f8\u5173\u7684\u6587\u4ef6\uff0c\u5982\u5185\u6838\u6587\u4ef6\u548c\u542f\u52a8\u5f15\u5bfc\u7a0b\u5e8f(grub)\u6587\u4ef6\u7b49 /dev \u8bbe\u5907\u6587\u4ef6\u4fdd\u5b58\u4f4d\u7f6e\u3002\u6211\u4eec\u5df2\u7ecf\u8bf4\u8fc7Linux\u4e2d\u6240\u6709\u5185\u5bb9\u4ee5\u6587\u4ef6\u5f62\u5f0f\u4fdd\u5b58\uff0c\u5305\u62ec\u786c\u4ef6\u3002\u90a3\u4e48\u8fd9\u4e2a\u76ee\u5f55\u5c31\u662f\u7528\u6765\u4fdd\u5b58\u6240\u6709\u786c\u4ef6\u8bbe\u5907\u6587\u4ef6\u7684 /etc \u914d\u7f6e\u6587\u4ef6\u4fdd\u5b58\u4f4d\u7f6e\u3002\u7cfb\u7edf\u5185\u6240\u6709\u91c7\u7528\u9ed8\u8ba4\u5b89\u88c5\u65b9\u5f0f\uff08rpm\u5b89\u88c5\uff09\u7684\u670d\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u5168\u90e8\u90fd\u4fdd\u5b58\u5728\u8fd9\u4e2a\u76ee\u5f55\u5f53\u4e2d\uff0c\u5982\u7528\u6237\u8d26\u6237\u548c\u5bc6\u7801\uff0c\u670d\u52a1\u7684\u542f\u52a8\u811a\u672c\uff0c\u5e38\u7528\u670d\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u7b49 /home \u666e\u901a\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u3002\u5efa\u7acb\u6bcf\u4e2a\u7528\u6237\u65f6\uff0c\u6bcf\u4e2a\u7528\u6237\u8981\u6709\u4e00\u4e2a\u9ed8\u8ba4\u767b\u5f55\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u5c31\u662f\u8fd9\u4e2a\u7528\u6237\u7684\u5bb6\u76ee\u5f55\uff0c\u6240\u6709\u666e\u901a\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u5c31\u662f\u5728/home\u4e0b\u5efa\u7acb\u4e00\u4e2a\u548c\u7528\u6237\u540d\u76f8\u540c\u7684\u76ee\u5f55\u3002\u5982\u7528\u6237user1\u7684\u5bb6\u76ee\u5f55\u5c31\u662f/home/user1 /lib \u7cfb\u7edf\u8c03\u7528\u7684\u51fd\u6570\u5e93\u4fdd\u5b58\u4f4d\u7f6e /lost+found \u5f53\u7cfb\u7edf\u610f\u5916\u5d29\u6e83\u6216\u673a\u5668\u610f\u5916\u5173\u673a\uff0c\u800c\u4ea7\u751f\u4e00\u4e9b\u6587\u4ef6\u788e\u7247\u653e\u5728\u8fd9\u91cc\u3002\u5f53\u7cfb\u7edf\u542f\u52a8\u7684\u8fc7\u7a0b\u4e2dfsck\u5de5\u5177\u4f1a\u68c0\u67e5\u8fd9\u91cc\uff0c\u5e76\u4fee\u590d\u5df2\u7ecf\u635f\u574f\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u8fd9\u4e2a\u76ee\u5f55\u53ea\u5728\u6bcf\u4e2a\u5206\u533a\u4e2d\u51fa\u73b0\uff0c\u4f8b\u5982/lost+found\u5c31\u662f\u6839\u5206\u533a\u7684\u5907\u4efd\u6062\u590d\u76ee\u5f55\uff0c/boot/lost+found\u5c31\u662f /boot\u5206\u533a\u7684\u5907\u4efd\u6062\u590d\u76ee\u5f55 /media \u6302\u8f7d\u76ee\u5f55\u3002\u7cfb\u7edf\u5efa\u8bae\u662f\u7528\u6765\u6302\u8f7d\u5a92\u4f53\u8bbe\u5907\u7684\uff0c\u4f8b\u5982\u8f6f\u76d8\u548c\u5149\u76d8 /mnt \u6302\u8f7d\u76ee\u5f55\uff0c\u65e9\u671fLinux\u4e2d\u53ea\u6709\u8fd9\u4e00\u4e2a\u6302\u8f7d\u76ee\u5f55\uff0c\u5e76\u6ca1\u6709\u7ec6\u5206\u3002\u73b0\u5728\u8fd9\u4e2a\u76ee\u5f55\u7cfb\u7edf\u5efa\u8bae\u6302\u8f7d\u989d\u5916\u8bbe\u5907\uff0c\u5982U\u76d8\uff0c\u79fb\u52a8\u786c\u76d8\u548c\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u7684\u5206\u533a /misc \u6302\u8f7d\u76ee\u5f55\u3002\u7cfb\u7edf\u5efa\u8bae\u7528\u6765\u6302\u8f7dNFS\u670d\u52a1\u7684\u5171\u4eab\u76ee\u5f55\u3002\u6211\u4eec\u5728\u521a\u521a\u5df2\u7ecf\u89e3\u91ca\u4e86\u6302\u8f7d\uff0c\u7ae5\u978b\u4eec\u5e94\u8be5\u77e5\u9053\u53ea\u8981\u662f\u4e00\u4e2a\u5df2\u7ecf\u5efa\u7acb\u7684\u7a7a\u76ee\u5f55\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u6302\u8f7d\u70b9\u3002\u90a3\u4e48\u7cfb\u7edf\u867d\u7136\u51c6\u5907\u4e86\u4e09\u4e2a\u9ed8\u8ba4\u6302\u8f7d\u76ee\u5f55/media\u3001/mnt\u3001/misc\uff0c\u4f46\u662f\u5230\u5e95\u5728\u54ea\u4e2a\u76ee\u5f55\u4e2d\u6302\u8f7d\u4ec0\u4e48\u8bbe\u5907\u90fd\u53ef\u4ee5\u7531\u7ba1\u7406\u5458\u81ea\u5df1\u51b3\u5b9a\u3002\u4f8b\u5982\u8d85\u54e5\u63a5\u89e6Linux\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u6302\u8f7d\u76ee\u5f55\u53ea\u6709/mnt\u4e00\u4e2a\uff0c\u6240\u4ee5\u517b\u6210\u4e86\u5728/mnt\u4e0b\u5efa\u7acb\u4e0d\u540c\u76ee\u5f55\u6302\u8f7d\u4e0d\u540c\u8bbe\u5907\u7684\u4e60\u60ef\u3002\u5982/mnt/cdrom\u6302\u8f7d\u5149\u76d8\uff0c/mnt/usb\u6302\u8f7dU\u76d8\uff0c\u8fd9\u90fd\u662f\u53ef\u4ee5\u7684 /opt \u7b2c\u4e09\u65b9\u5b89\u88c5\u7684\u8f6f\u4ef6\u4fdd\u5b58\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u76ee\u5f55\u5c31\u662f\u653e\u7f6e\u548c\u5b89\u88c5\u5176\u4ed6\u8f6f\u4ef6\u7684\u4f4d\u7f6e\uff0c\u6211\u624b\u5de5\u5b89\u88c5\u7684\u6e90\u7801\u5305\u8f6f\u4ef6\u90fd\u53ef\u4ee5\u5b89\u88c5\u5230\u8fd9\u4e2a\u76ee\u5f55\u5f53\u4e2d\u3002\u4e0d\u8fc7\u6211\u8fd8\u662f\u66f4\u52a0\u4e60\u60ef\u628a\u8f6f\u4ef6\u653e\u7f6e\u5230/usr/local/\u76ee\u5f55\u5f53\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4/usr/local/\u76ee\u5f55\u4e5f\u53ef\u4ee5\u7528\u6765\u5b89\u88c5\u8f6f\u4ef6 /proc \u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff0c\u8be5\u76ee\u5f55\u4e2d\u7684\u6570\u636e\u5e76\u4e0d\u4fdd\u5b58\u5230\u786c\u76d8\u5f53\u4e2d\uff0c\u800c\u662f\u4fdd\u5b58\u5230\u5185\u5b58\u5f53\u4e2d\u3002\u4e3b\u8981\u4fdd\u5b58\u7cfb\u7edf\u7684\u5185\u6838\uff0c\u8fdb\u7a0b\uff0c\u5916\u90e8\u8bbe\u5907\u72b6\u6001\u548c\u7f51\u7edc\u72b6\u6001\u706f\u3002\u5982/proc/cpuinfo\u662f\u4fdd\u5b58CPU\u4fe1\u606f\u7684\uff0c /proc/devices\u662f\u4fdd\u5b58\u8bbe\u5907\u9a71\u52a8\u7684\u5217\u8868\u7684\uff0c/proc/filesystems\u662f\u4fdd\u5b58\u6587\u4ef6\u7cfb\u7edf\u5217\u8868\u7684\uff0c /proc/net/\u662f\u4fdd\u5b58\u7f51\u7edc\u534f\u8bae\u4fe1\u606f\u7684 /sys \u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u3002\u548c/proc\u76ee\u5f55\u76f8\u4f3c\uff0c\u90fd\u662f\u4fdd\u5b58\u5728\u5185\u5b58\u5f53\u4e2d\u7684\uff0c\u4e3b\u8981\u662f\u4fdd\u5b58\u4e8e\u5185\u6838\u76f8\u5173\u4fe1\u606f\u7684 /root \u8d85\u7ea7\u7528\u6237\u7684\u5bb6\u76ee\u5f55\u3002\u666e\u901a\u7528\u6237\u5bb6\u76ee\u5f55\u5728\"/home\"\u4e0b\uff0c\u8d85\u7ea7\u7528\u4e8e\u5bb6\u76ee\u5f55\u76f4\u63a5\u5728\"/\"\u4e0b /srv \u670d\u52a1\u6570\u636e\u76ee\u5f55\u3002\u4e00\u4e9b\u7cfb\u7edf\u670d\u52a1\u542f\u52a8\u4e4b\u540e\uff0c\u53ef\u4ee5\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u4fdd\u5b58\u6240\u9700\u8981\u7684\u6570\u636e /tmp \u4e34\u65f6\u76ee\u5f55\u3002\u7cfb\u7edf\u5b58\u653e\u4e34\u65f6\u6587\u4ef6\u7684\u76ee\u5f55\uff0c\u8be5\u76ee\u5f55\u4e0b\u6240\u6709\u7528\u6237\u90fd\u53ef\u4ee5\u8bbf\u95ee\u548c\u5199\u5165\u3002\u6211\u4eec\u5efa\u8bae\u6b64\u76ee\u5f55\u4e2d\u4e0d\u80fd\u4fdd\u5b58\u91cd\u8981\u6570\u636e\uff0c\u6700\u597d\u6bcf\u6b21\u5f00\u673a\u90fd\u628a\u8be5\u76ee\u5f55\u6e05\u7a7a /usr \u7cfb\u7edf\u8f6f\u4ef6\u8d44\u6e90\u76ee\u5f55\u3002\u6ce8\u610fusr\u4e0d\u662fuser\u7684\u7f29\u5199\uff0c\u800c\u662f\"Unix Softwre Resource\"\u7684\u7f29\u5199\uff0c\u6240\u4ee5\u4e0d\u662f\u5b58\u653e\u7528\u6237\u6570\u636e\uff0c\u800c\u662f\u5b58\u653e\u7cfb\u7edf\u8f6f\u4ef6\u8d44\u6e90\u7684\u76ee\u5f55\u3002\u7cfb\u7edf\u4e2d\u5b89\u88c5\u7684\u8f6f\u4ef6\u5927\u591a\u6570\u4fdd\u5b58\u5728\u8fd9\u91cc /var \u52a8\u6001\u6570\u636e\u4fdd\u5b58\u4f4d\u7f6e\u3002\u4e3b\u8981\u4fdd\u5b58\u7f13\u5b58\u3001\u65e5\u5fd7\u4ee5\u53ca\u8f6f\u4ef6\u8fd0\u884c\u6240\u4ea7\u751f\u7684\u6587\u4ef6 </li> </ol> <p>sbin / usr</p> <p>sbin\u4e2d\u7684s\u8868\u793asuper\uff0c\u5c31\u662f\u8d85\u7ea7\u7528\u6237\u7684\u610f\u601d\u3002usr\u4e0d\u662fuser\uff0c\u800c\u662f<code>unix software resource</code></p>"},{"location":"Linux/Linux/#_1","title":"\u547d\u4ee4\u683c\u5f0f","text":"<ol> <li> <p>\u547d\u4ee4\u683c\u5f0f\uff1a  \u547d\u4ee4 [\u2014\u9009\u9879] [\u53c2\u6570]  \u4f8b\uff1als -la /etc</p> <p>\u8bf4\u660e\uff1a   1\uff09\u4e2a\u522b\u547d\u4ee4\u4f7f\u7528\u4e0d\u9075\u5faa\u6b64\u683c\u5f0f   2\uff09\u5f53\u6709\u591a\u4e2a\u9009\u9879\u65f6\uff0c\u53ef\u4ee5\u5199\u5728\u4e00\u8d77   3\uff09\u7b80\u5316\u9009\u9879\u4e0e\u5b8c\u6574\u9009\u9879\uff1a-a \u7b49\u4e8e -all </p> </li> </ol>"},{"location":"Linux/Linux/#_2","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"Linux/useful_cmd/","title":"Useful cmd","text":"<p> \u7ea6 519 \u4e2a\u5b57  43 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"Linux/useful_cmd/#useful-cmds","title":"Useful cmds","text":"<ol> <li> <p><code>find . | grep '\\.cpp$' | xargs cat | wc -l</code></p> <ul> <li>\u89e3\u91ca\uff1a\u7edf\u8ba1\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u4ee5 .cpp \u4e3a\u540e\u7f00\u7684\u6587\u4ef6\u7684\u603b\u884c\u6570\u3002</li> <li><code>find .</code>\uff1a\u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\u3002</li> <li><code>grep '\\.cpp$'</code>\uff1a\u4f7f\u7528 grep \u547d\u4ee4\u8fc7\u6ee4\u51fa\u4ee5 .cpp \u4e3a\u540e\u7f00\u7684\u6587\u4ef6\u3002<code>\\.</code> \u8868\u793a\u5339\u914d\u70b9\u53f7\uff0c<code>$</code> \u8868\u793a\u5339\u914d\u884c\u5c3e\u3002</li> <li><code>xargs cat</code>\uff1a\u4f7f\u7528 xargs \u547d\u4ee4\u5c06\u8fc7\u6ee4\u540e\u7684\u6587\u4ef6\u540d\u4f20\u9012\u7ed9 cat \u547d\u4ee4\u3002cat \u547d\u4ee4\u7528\u4e8e\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u5e76\u8f93\u51fa\u3002</li> <li><code>wc -l</code>\uff1a\u4f7f\u7528 wc \u547d\u4ee4\u7edf\u8ba1\u8f93\u5165\u7684\u884c\u6570\u3002-l \u9009\u9879\u8868\u793a\u53ea\u7edf\u8ba1\u884c\u6570\u3002</li> </ul> </li> <li> <p><code>history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr</code></p> <ul> <li>\u89e3\u91ca\uff1a\u7edf\u8ba1\u547d\u4ee4\u884c\u547d\u4ee4\u7684\u9891\u7387\u3002</li> <li><code>history</code>\uff1a\u663e\u793a\u5f53\u524d\u7528\u6237\u7684\u547d\u4ee4\u5386\u53f2\u8bb0\u5f55\u3002</li> <li><code>tr -s ' '</code>\uff1a\u4f7f\u7528 tr \u5de5\u5177\u6765\u538b\u7f29\uff08\u6216\u5220\u9664\uff09\u8f93\u5165\u4e2d\u7684\u91cd\u590d\u7a7a\u683c\u3002\u8fd9\u4f7f\u5f97\u6bcf\u4e2a\u5355\u8bcd\u4e4b\u95f4\u53ea\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u65e0\u8bba\u539f\u59cb\u8f93\u5165\u4e2d\u6709\u591a\u5c11\u4e2a\u7a7a\u683c\u3002tr \u4ee3\u8868 \"translate\"\uff08\u8f6c\u6362\uff09\uff0c\u800c -s \u9009\u9879\u5219\u8868\u793a \"squeeze\"\uff08\u538b\u7f29\uff09\u3002 \u5f53\u4f7f\u7528 tr -s \u65f6\uff0c\u5b83\u4f1a\u5c06\u8f93\u5165\u4e2d\u7684\u91cd\u590d\u5b57\u7b26\u5e8f\u5217\u538b\u7f29\u6210\u5355\u4e2a\u5b57\u7b26\u3002</li> <li><code>cut -d ' ' -f3</code>\uff1a\u4f7f\u7528 cut \u5de5\u5177\u4ece\u8f93\u5165\u4e2d\u63d0\u53d6\u7b2c\u4e09\u4e2a\u5b57\u6bb5\uff08\u4ee5\u7a7a\u683c\u4e3a\u5206\u9694\u7b26<code>-d ' '</code>\uff09\u3002f1\u662fhistory\u8f93\u51fa\u7684\u7a7a\u683c\uff0cf2\u662f\u547d\u4ee4\u51fa\u73b0\u7684\u7f16\u53f7\uff0cf3\u624d\u662f\u547d\u4ee4\u3002</li> <li><code>sort</code>\uff1a\u5bf9\u8f93\u5165\u8fdb\u884c\u6392\u5e8f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f1a\u6309\u7167\u5b57\u6bcd\u987a\u5e8f\u5bf9\u63d0\u53d6\u7684\u547d\u4ee4\u8fdb\u884c\u6392\u5e8f\u3002</li> <li><code>uniq -c</code>\uff1a\u5220\u9664\u76f8\u90bb\u7684\u91cd\u590d\u884c\uff0c-c\u8868\u793a\u6bcf\u884c\u7684\u524d\u9762\u663e\u793a\u51fa\u73b0\u7684\u6b21\u6570\u3002</li> <li><code>sort -nr</code>\uff1a\u6309\u7167\u6570\u503c\uff08-n\uff09\u4ece\u5927\u5230\u5c0f\uff08-r\uff09\u5bf9\u8f93\u51fa\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u4f7f\u5f97\u6700\u5e38\u7528\u7684\u547d\u4ee4\u51fa\u73b0\u5728\u5217\u8868\u7684\u9876\u90e8\u3002</li> </ul> Bash<pre><code>linux:~$ history\n    1  history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr\n    2  ls\n    3  history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr\n    4  cat\n    5  history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr\n    6  history\nlinux:~$ history | tr -s ' '\n    1 history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr\n    2 ls\n    3 history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr\n    4 cat\n    5 history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr\n    6 history\n    7 history | tr -s ' '\nlinux:~$ history | tr -s ' ' | cut -d ' ' -f3\n    history\n    ls\n    history\n    cat\n    history\n    history\n    history\n    history\nlinux:~$ history | tr -s ' ' | cut -d ' ' -f3 | sort\n    cat\n    history\n    history\n    history\n    history\n    history\n    history\n    history\n    ls\nlinux:~$ history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c\n    1 cat\n    8 history\n    1 ls\nlinux:~$ history | tr -s ' ' | cut -d ' ' -f3 | sort | uniq -c | sort -nr\n    9 history\n    1 ls\n    1 cat\nlinux:~$ \n</code></pre> </li> <li> <p><code>command1 |&amp; command2</code>: \u4f1a\u5c06<code>command1</code>\u7684\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u5408\u5e76\uff0c\u7136\u540e\u5c06\u5408\u5e76\u540e\u7684\u8f93\u51fa\u4f20\u9012\u7ed9<code>command2</code></p> </li> <li><code>xxd -r -p</code>:<ul> <li>\u89e3\u91ca\uff1a\u5c06\u8f93\u5165\u7684\u7eaf\u5341\u516d\u8fdb\u5236\u6570\u636e\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u6570\u636e\u3002</li> <li><code>-r</code>: \u8868\u793a\u53cd\u5411\u64cd\u4f5c\uff0c\u5373\u4ece\u5341\u516d\u8fdb\u5236\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u3002</li> <li><code>-p</code>: \u8868\u793a\u4ee5\u7eaf\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u8bfb\u53d6\u8f93\u5165\uff0c\u5373\u4e0d\u5305\u542b\u4efb\u4f55\u989d\u5916\u7684\u683c\u5f0f\u4fe1\u606f\uff0c\u53ea\u8bfb\u53d6\u5341\u516d\u8fdb\u5236\u6570\u636e\u3002</li> </ul> </li> </ol>"},{"location":"Misc/LearningMaterial/","title":"Learning Material","text":"<p> \u7ea6 12 \u4e2a\u5b57 </p>"},{"location":"Misc/LearningMaterial/#useful-links","title":"Useful links","text":"<ul> <li>\u5929\u5751\u4e13\u4e1a\u8f6c\u7801\u81ea\u6551\u6307\u5357</li> </ul>"},{"location":"Misc/Memo/","title":"Memo","text":"<p> \u7ea6 187 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p>"},{"location":"Misc/Memo/#mkdocs","title":"mkdocs","text":"<ul> <li>\u4ece\u5934\u6559\u4f60\u7528<code>mkdocs</code>\u6784\u5efa\u4e2a\u4eba\u535a\u5ba2\u7cfb\u7edf: blog.csdn.net.</li> <li>Mkdocs Material\u4f7f\u7528\u5b66\u4e60\uff1aMkdocs Material</li> <li>My notes: local\u9875\u9762\uff0cpublic\u9879\u76ee\u9875\u9762\uff0cpublic\u4e2a\u4eba\u9875\u9762.</li> <li>\u672c\u5730\u6587\u4ef6\u5b58\u653e\u76ee\u5f55\u4e3a<code>C:\\Users\\username\\ChaoNotes</code>\uff0c\u5bf9\u5e94\u4e8eGitHub\u4ed3\u5e93\u4e3a\uff1a<ul> <li>\u6e90\u6587\u6863\u5b58\u653e\u5728<code>master</code>\u5206\u652f</li> <li>site\u76ee\u5f55\u4e0b\u7684\u6587\u6863\u5b58\u653e\u5728<code>gh-pages</code>\u5206\u652f\uff0c\u7528\u4e8e\u90e8\u7f72</li> </ul> </li> <li>\u4e2a\u4eba\u9875\u9762\u5b58\u653e\u76ee\u5f55\u4e3a<code>C:\\Users\\username\\lingyu11.github.io</code>\uff0c\u5bf9\u5e94\u4e8eGitHub\u4ed3\u5e93\u4e3a\uff1a<ul> <li>site\u76ee\u5f55\u4e0b\u7684\u6587\u6863\u5b58\u653e\u5728<code>master</code>\u5206\u652f\uff0c\u7528\u4e8e\u90e8\u7f72\uff08\u4ec5\u4ec5\u662f\u4e3a\u4e86\u4e2a\u4eba\u9875\u9762\u80fd\u591f\u8bbf\u95ee\uff09</li> </ul> </li> <li>\u5982\u4f55\u66f4\u65b0\u7b14\u8bb0\uff1a<ul> <li>Step1: \u90e8\u7f72<code>C:\\Users\\username\\lingyu11.github.io&gt; python -m mkdocs gh-deploy --config-file ../ChaoNotes/mkdocs.yml --remote-branch master</code></li> <li>Step2: \u5b58\u6863 <code>C:\\Users\\username\\ChaoNotes&gt; git add ./git commit -m \"commit message\"/git push</code></li> </ul> </li> <li>\u672c\u5730\u7b14\u8bb0\u91cd\u542f\uff1a<code>C:\\Users\\username\\ChaoNotes&gt;python -m mkdocs serve</code></li> </ul>"},{"location":"Misc/Memo/#useful-links","title":"Useful links","text":""},{"location":"Misc/Todo/","title":"Todo","text":"<p> \u7ea6 125 \u4e2a\u5b57 </p>"},{"location":"Misc/Todo/#todo","title":"Todo","text":"<p>\ud83d\udccc \u5185\u8054\u56de\u8c03\u51fd\u6570\uff1ahttps://python3-cookbook.readthedocs.io/zh-cn/latest/c07/p11_inline_callback_functions.html</p> <p>\ud83d\udccc \u7b2c\u4e94\u7ae0\uff1a\u6587\u4ef6\u4e0eIO https://python3-cookbook.readthedocs.io/zh-cn/latest/chapters/p05_files_and_io.html</p> <p>\ud83d\udccc \u7b2c\u516d\u7ae0\uff1a\u6570\u636e\u7f16\u7801\u548c\u5904\u7406 https://python3-cookbook.readthedocs.io/zh-cn/latest/chapters/p06_data_encoding_and_process.html</p>"},{"location":"Misc/Todo/#finished","title":"Finished","text":"<p>\u2705 2024-09-22 20:27:03 \u5b8c\u6210\u4e86 01 About ICS-PA2024</p>"},{"location":"Misc/Todo/#os-todo","title":"OS Todo","text":"<p>\ud83d\udccc AbstractMachine: \u62bd\u8c61\u8ba1\u7b97\u673a</p> <p>\ud83d\udccc \u8be6\u7ec6\u9605\u8bfb\u4ee3\u7801</p> <ul> <li>Lect1/mini-rv32 </li> <li>Lect4/mosaic</li> </ul> <p>\ud83d\udccc \u505alab</p> <ul> <li>M1: \u6253\u5370\u8fdb\u7a0b\u6811 (pstree)</li> <li>L0: \u4e3a\u8ba1\u7b97\u673a\u786c\u4ef6\u7f16\u7a0b</li> <li>M2: \u534f\u7a0b\u5e93 (libco)</li> </ul> <p>\ud83d\udccc \u8bfe\u672c</p> <ul> <li>Preface \u524d\u8a00</li> <li>\u7b2c 1 \u7ae0 - Dialogue on the Book</li> <li>\u7b2c 2 \u7ae0 - Introduction to Operating Systems</li> <li>\u7b2c 25 \u7ae0 - Dialogue on Concurrency</li> <li>\u7b2c 26 \u7ae0 - Concurrency and Threads</li> <li>\u7b2c 27 \u7ae0 - Thread API</li> </ul>"},{"location":"Misc/Todo/#os-finished","title":"OS Finished","text":"<p>\ud83d\udccc Lecture 1/2/3/4</p>"},{"location":"OS/%E5%B9%B6%E5%8F%91/","title":"\u5e76\u53d1","text":"<p> \u7ea6 1297 \u4e2a\u5b57  283 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p>"},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-5","title":"Lecture 5 \u591a\u5904\u7406\u5668\u7f16\u7a0b","text":"<p>Take-away Messages</p> <p>\u5728\u7b80\u5316\u591a\u7ebf\u7a0b\u7684\u6a21\u578b\u4e2d\uff0c\u5e76\u53d1\u7a0b\u5e8f\u5c31\u662f \u201c\u72b6\u6001\u673a\u7684\u96c6\u5408\u201d\uff0c\u6bcf\u4e00\u6b65\u9009\u4e00\u4e2a\u72b6\u6001\u673a\u6267\u884c\u4e00\u6b65\u3002\u7136\u800c\uff0c\u771f\u5b9e\u7684\u7cfb\u7edf\u5374\u56e0\u4e3a \u201c\u7f16\u8bd1\u5668\u201d \u7684\u65e0\u5904\u4e0d\u5728\uff0c\u4f7f\u5171\u4eab\u5185\u5b58\u5e76\u53d1\u7684\u884c\u4e3a\u5341\u5206\u590d\u6742\u3002</p> <p>\u4e0d\u5e78\u7684\u662f\uff0c\u4eba\u7c7b\u672c\u8d28\u4e0a\u662f\u7269\u7406\u4e16\u754c (\u5b8f\u89c2\u65f6\u95f4) \u4e2d\u7684 \u201csequential creature\u201d\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u7f16\u7a0b\u65f6\uff0c\u6211\u4eec\u7684\u76f4\u89c9\u4e5f\u53ea\u4e60\u60ef\u4e8e\u5355\u7ebf\u7a0b\u7684\u987a\u5e8f/\u9009\u62e9/\u5faa\u73af\u7ed3\u6784\uff0c\u771f\u5b9e\u591a\u5904\u7406\u5668\u4e0a\u7684\u5e76\u53d1\u7f16\u7a0b\u662f\u975e\u5e38\u5177\u6709\u6311\u6218\u6027\u7684 \u201c\u5e95\u5c42\u6280\u672f\u201d\u3002\u5728\u540e\u7eed\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u63d0\u51fa\u82e5\u5e72\u5e76\u53d1\u63a7\u5236\u6280\u672f\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u5728\u9700\u8981\u7684\u65f6\u5019\u907f\u514d\u5e76\u53d1\u7684\u53d1\u751f\uff0c\u4f7f\u5e76\u53d1\u7a0b\u5e8f\u9000\u56de\u5230\u987a\u5e8f\u7a0b\u5e8f\uff0c\u4ece\u800c\u4f7f\u6211\u4eec\u80fd\u591f\u7406\u89e3\u548c\u63a7\u5236\u5e76\u53d1\u3002</p> <ol> <li>\u7b80\u5316\u7684\u7ebf\u7a0b API (thread.h)<ul> <li><code>create(fn)</code><ul> <li>\u521b\u5efa\u4e00\u4e2a\u5165\u53e3\u51fd\u6570\u662f <code>fn</code> \u7684\u7ebf\u7a0b\uff0c\u5e76\u7acb\u5373\u5f00\u59cb\u6267\u884c<ul> <li><code>void fn(int tid) { ... }</code></li> <li>\u53c2\u6570 <code>tid</code> \u4ece 1 \u5f00\u59cb\u7f16\u53f7</li> </ul> </li> <li>\u884c\u4e3a\uff1a<code>sys_spawn(fn, tid)</code></li> </ul> </li> <li><code>join()</code><ul> <li>\u7b49\u5f85\u6240\u6709\u8fd0\u884c\u7ebf\u7a0b\u7684\u8fd4\u56de (\u4e5f\u53ef\u4ee5\u4e0d\u8c03\u7528)</li> <li>\u884c\u4e3a\uff1a<code>while (done != T) sys_sched()</code></li> </ul> </li> </ul> </li> <li> <p>hello.c\u4ea4\u66ff\u6253\u5370 a \u548c b</p> C<pre><code>#include \"thread.h\"\n\nvoid T_a() { while (1) { printf(\"a\"); } }\nvoid T_b() { while (1) { printf(\"b\"); } }\n\nint main() {\n    create(T_a);\n    create(T_b);\n}\n</code></pre> <p><code>top -d 0.5</code>: \u67e5\u770b\u8fdb\u7a0b\u7684 CPU \u5360\u7528\u7387\uff0c\u53ef\u4ee5\u770b\u5230 CPU \u4f7f\u7528\u7387\u8fd1\u4e4e 200%\uff0c\u8bf4\u660e\u4e24\u4e2a\u7ebf\u7a0b\u51e0\u4e4e\u540c\u65f6\u8fd0\u884c\u3002\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u628a\u7ebf\u7a0b\u653e\u7f6e\u5728\u4e0d\u540c\u7684\u5904\u7406\u5668\u4e0a\uff0c\u4ee5\u63d0\u9ad8\u6548\u7387\u3002</p> Bash<pre><code>PID   USER      PR   NI  VIRT   RES  SHR S %CPU   %MEM  TIME+   COMMAND\n26408 username  20   0   84796  956  868 S 196.0  0.0   0:43.42 hello\n</code></pre> </li> <li> <p>T_a \u548c T_b \u771f\u7684\u5171\u4eab\u5185\u5b58\u5417\uff1f\u2192 memory.c</p> C<pre><code>#include \"thread.h\"\n\n// We claim that n is shared among threads.\nint n;\n\nvoid T_hello(int id) {\n    // To validate this claim, each thread reads and increments\n    // n, and we expect to see different numbers being printed.\n    int i = n++;\n    printf(\"%d\\n\", i);\n}\n\nint main() {\n    for (int i = 0; i &lt; 10; i++) {\n        create(T_hello);\n    }\n}\n</code></pre> </li> <li> <p>\u5982\u4f55\u8bc1\u660e\u7ebf\u7a0b\u5177\u6709\u72ec\u7acb\u5806\u6808 (\u4ee5\u53ca\u786e\u5b9a\u5806\u6808\u7684\u8303\u56f4)\uff1f\u2192 stack.c</p> C<pre><code>#include \"thread.h\"\n\n#define N 4\n\nchar * volatile low[N];\nchar * volatile high[N];\n\nvoid update_range(int T, char *ptr) {\n    // We have a witness of thread T accessing stack pointer\n    // ptr. So we keep this record.\n    if (ptr &lt; low[T]) {\n        low[T] = ptr;\n    }\n    if (ptr &gt; high[T]) {\n        high[T] = ptr;\n    }\n}\n\nvoid probe(int T, int n) {\n    // Local variables are stack-allocated.\n    char scratch[64];\n    update_range(T, scratch);\n\n    printf(\"Stack(T%d) &gt;= %ld KB\\n\",\n        T, (high[T] - low[T]) / 1024);\n\n    probe(T, n + 1); // Infinite recursion.\n}\n\nvoid T_probe(int T) {\n    T -= 1; // \u521b\u5efa\u7684\u7ebf\u7a0bpid\u4ece1\u5f00\u59cb\uff0c\u6240\u4ee5T-1\u4ee5\u62ff\u5230\u6b63\u786e\u7684low[T]\n    low[T] = (char *)-1;  // 0xffffffffffffffff\n    high[T] = (char *)0;  // 0x0000000000000000\n    probe(T, 0);\n}\n\nint main() {\n    // Disable printf buffering. Try to make more lines being\n    // printed, because the program will eventually crash (and\n    // all buffered contents are lost).\n    setbuf(stdout, NULL);\n\n    for (int i = 0; i &lt; N; i++) {\n        create(T_probe);\n    }\n}\n</code></pre> <p>\u7a0b\u5e8f\u8f93\u51fa\uff1a Bash<pre><code>----- Shared Memory Test -----\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n----- Stack Probe Test -----\nSegmentation fault (core dumped)\nStack(T2) &gt;= 8177 KB\n</code></pre> 8177KB\u6700\u63a5\u8fd18192KB\uff0c\u4e5f\u5c31\u662f\u8bf4\u7ebf\u7a0b\u5e93\u9ed8\u8ba4\u63d0\u4f9b\u7684stack\u5927\u5c0f\u662f8MB\uff0c\u8fd9\u4e2a\u5927\u5c0f\u8db3\u4ee5\u591f\u4e00\u822c\u7684\u7a0b\u5e8f\u4f7f\u7528\u4e86\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u5e76\u53d1\u7f16\u7a0b\uff0c\u8981\u820d\u5f03\u4e00\u4e9b\u6211\u4eec\u4e4b\u524d\u5bf9\u5355\u7ebf\u7a0b\u987a\u5e8f\u7a0b\u5e8f\u7684\u7406\u89e3:</p> <ul> <li>\u72b6\u6001\u8fc1\u79fb\u539f\u5b50\u6027\u7684\u5047\u8bbe: \u5171\u4eab\u5185\u5b58\u63a8\u7ffb\u4e86 \u201c\u539f\u5b50\u6027\u201d \u5047\u8bbe<ul> <li>\u4efb\u4f55\u65f6\u5019\uff0cload \u8bfb\u5230\u7684\u503c\u90fd\u53ef\u80fd\u662f\u522b\u7684\u7ebf\u7a0b\u5199\u5165\u7684</li> <li>\u6211\u4eec\u4e60\u4ee5\u4e3a\u5e38\u7684\u7b80\u5316\u4f1a\u6f0f\u6389\u5e76\u53d1\u7a0b\u5e8f\u53ef\u80fd\u7684\u884c\u4e3a</li> </ul> </li> <li>\u7a0b\u5e8f\u987a\u5e8f\u6267\u884c\u7684\u5047\u8bbe: \u7f16\u8bd1\u5668\u4f1a\u8bd5\u56fe\u4f18\u5316\u72b6\u6001\u8fc1\u79fb\uff0c\u6539\u53d8\u6267\u884c\u6d41</li> <li>\u5b58\u5728\u5168\u5c40\u6307\u4ee4\u6267\u884c\u987a\u5e8f\u7684\u5047\u8bbe: \u4e0d\u540c\u5904\u7406\u5668\u53ef\u80fd\u770b\u5230\u4e0d\u540c\u7684\u5171\u4eab\u5185\u5b58, \u201c\u4e00\u4e2a\u5171\u4eab\u5185\u5b58\u201d \u53ea\u662f\u4e2a\u7b80\u5316\u7684\u5e7b\u89c9\u3002\u7531\u4e8e\u52a8\u6001\u6307\u4ee4\u8c03\u5ea6\u548c\u7f13\u5b58\u7684\u5171\u540c\u4f5c\u7528\uff0c\u5b9e\u9645\u7a0b\u5e8f\u7684\u8fd0\u884c\u7ed3\u679c\u66f4\u53ef\u80fd\u8d85\u51fa\u6211\u4eec\u7684\u9884\u671f\u3002</li> </ul> </li> <li> <p>\u72b6\u6001\u8fc1\u79fb\u539f\u5b50\u6027\u7684\u5047\u8bbe: alipay.c     C<pre><code>#include \"thread.h\"\n\nunsigned long balance = 100;\n\nvoid Alipay_withdraw(int amt) {\n    if (balance &gt;= amt) {\n        // Bugs may only manifest on specific timings. Sometimes\n        // we reproduce bugs by inserting sleep()s.\n        usleep(1); // \u5f15\u53d1sys_sched()\n\n        balance -= amt;\n    }\n}\n\nvoid T_alipay() {\n    Alipay_withdraw(100);\n}\n\nint main() {\n    create(T_alipay);\n    create(T_alipay);\n    join();\n    printf(\"balance = %lu\\n\", balance);\n}\n</code></pre></p> <p>\u5728usleep(1)\u7684\u60c5\u51b5\u4e0b\u8f93\u51fa\u662f<code>balance = 18446744073709551516</code>\uff0c\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u6ee1\u8db3<code>balance &gt;= amt</code>\uff0c\u76f8\u5f53\u4e8e\u51cf\u4e86\u4e24\u6b21100\u3002</p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801 sum \u7684\u6700\u5c0f\u503c\u662f2\u7684\u60c5\u51b5\uff1a\u8be5\u7ebf\u7a0b\u6267\u884c\u5230\u6700\u540e\u4e00\u4e2afor\u5faa\u73af\u65f6\uff0cload\u5230\u7684sum\u4e3a1\uff08\u6ce8\u610f\u4e0d\u53ef\u80fdload\u5230sum\u4e3a0\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u672c\u7ebf\u7a0b\u800c\u8a00\u5df2\u7ecf\u6267\u884c\u8fc7\u4e24\u4e2afor\u5faa\u73af\u4e86\uff0c\u5982\u679c\u662fload\u672c\u7ebf\u7a0b\u7684sum\u5e94\u5f53\u662f2\uff0c\u4e00\u5b9a\u662fload\u522b\u7684\u7ebf\u7a0b\u6539\u5199\u540e\u7684sum\u3002\u522b\u7684\u7ebf\u7a0b\u4e00\u5b9a\u8981\u81f3\u5c11\u6267\u884c\u8fc7\u4e00\u6b21load-store\u628asum\u5199\u8fdb\u53bb\uff0c\u6240\u4ee5\u6b64\u65f6\u522b\u7684\u7ebf\u7a0b\u91ccsum\u6700\u5c0f\u4e3a1\uff09\uff0c\u7136\u540e\u63a5\u7740\u5176\u4ed6\u7ebf\u7a0b\u90fd\u6267\u884c\u5b8c\u6240\u6709\u5faa\u73af\u7ed3\u675f\u4e86\u3002\u8be5\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\u5b8c\u5269\u4e0b\u7684<code>t += 1; store(sum, t);</code>\u5bfc\u81f4\u6700\u540esum\u4e3a2\u3002     C<pre><code>// \u521d\u59cb\u65f6 sum = 0; \u5047\u8bbe\u5355\u884c\u8bed\u53e5\u7684\u6267\u884c\u662f\u539f\u5b50\u7684\n// \u5e76\u53d1\u6267\u884c\u4e09\u4e2a T_sum\uff0csum \u7684\u6700\u5c0f\u503c\u662f\u591a\u5c11\uff1f\u2192 \u662f2\nvoid T_sum() {\n    for (int i = 0; i &lt; 3; i++) {\n        int t = load(sum);\n        t += 1;\n        store(sum, t);\n    }\n}\n</code></pre></p> </li> <li> <p>sum.c\uff1a     C<pre><code>#include \"thread.h\"\n\n#define N 100000000\n\nlong sum = 0;\n\nvoid T_sum() {\n    for (int i = 0; i &lt; N; i++) {\n        sum++;\n\n        // Won't work even if we force a single-instruction\n        // increment.\n\n        // asm volatile(\n        //     \"incq %0\" : \"+m\"(sum)\n        // );\n    }\n}\n\nint main() {\n    create(T_sum);\n    create(T_sum);\n\n    join();\n\n    printf(\"sum = %ld\\n\", sum);\n    printf(\"2*n = %ld\\n\", 2L * N);\n}\n</code></pre></p> <p>\u4e0d\u540c\u7684\u7f16\u8bd1\u4f18\u5316\u8f93\u51fa\u4e0d\u4e00\u6837\uff1a</p> <ul> <li> <p>-O0\u8f93\u51fa<code>sum = 119137703 2*n = 200000000</code></p> Bash<pre><code>00000000000013d9 &lt;T_sum&gt;:\n    13d9:       f3 0f 1e fa             endbr64 \n    13dd:       55                      push   %rbp\n    13de:       48 89 e5                mov    %rsp,%rbp\n    13e1:       c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n    13e8:       eb 16                   jmp    1400 &lt;T_sum+0x27&gt;\n    13ea:       48 8b 05 4f 2c 00 00    mov    0x2c4f(%rip),%rax        # 4040 &lt;sum&gt;\n    13f1:       48 83 c0 01             add    $0x1,%rax\n    13f5:       48 89 05 44 2c 00 00    mov    %rax,0x2c44(%rip)        # 4040 &lt;sum&gt;\n    13fc:       83 45 fc 01             addl   $0x1,-0x4(%rbp)\n    1400:       81 7d fc ff e0 f5 05    cmpl   $0x5f5e0ff,-0x4(%rbp)\n    1407:       7e e1                   jle    13ea &lt;T_sum+0x11&gt;\n    1409:       90                      nop\n    140a:       90                      nop\n    140b:       5d                      pop    %rbp\n    140c:       c3                      ret\n</code></pre> </li> <li> <p>-O1\u8f93\u51fa<code>sum = 100000000 2*n = 200000000</code></p> Bash<pre><code>00000000000011e3 &lt;T_sum&gt;:\n    11e3:       f3 0f 1e fa             endbr64 \n    11e7:       48 8b 15 52 2e 00 00    mov    0x2e52(%rip),%rdx        # 4040 &lt;sum&gt;\n    11ee:       48 8d 42 01             lea    0x1(%rdx),%rax\n    11f2:       48 81 c2 01 e1 f5 05    add    $0x5f5e101,%rdx\n    11f9:       48 89 c1                mov    %rax,%rcx\n    11fc:       48 83 c0 01             add    $0x1,%rax\n    1200:       48 39 d0                cmp    %rdx,%rax\n    1203:       75 f4                   jne    11f9 &lt;T_sum+0x16&gt;\n    1205:       48 89 0d 34 2e 00 00    mov    %rcx,0x2e34(%rip)        # 4040 &lt;sum&gt;\n    120c:       c3                      ret\n</code></pre> </li> <li> <p>-O2\u8f93\u51fa<code>sum = 200000000 2*n = 200000000</code>\uff0c\u5373\u4fbf\u5982\u6b64\uff0c\u76f4\u63a5\u53d8\u6210\u4e00\u6761addq\u6307\u4ee4\uff0csum\u7684\u8f93\u51fa\u4ecd\u65e7\u4e0d\u4e00\u5b9a\u6b63\u786e\uff01\u5982\u540calipay\u7684\u4f8b\u5b50\u4e00\u6837\u5982\u679c\u52a0\u5165usleep(1)\u8fd8\u662f\u53ef\u4ee5\u770b\u5230\u6bcf\u6b21\u7ed3\u679c\u90fd\u4e0d\u4e00\u6837\u3002</p> Bash<pre><code>0000000000001260 &lt;T_sum&gt;:\n    1260:       f3 0f 1e fa             endbr64 \n    1264:       48 81 05 d1 2d 00 00    addq   $0x5f5e100,0x2dd1(%rip)        # 4040 &lt;sum&gt;\n    126b:       00 e1 f5 05 \n    126f:       c3                      ret\n</code></pre> </li> </ul> </li> <li> <p>memory model:</p> <ul> <li>\u4f60\u4ee5\u4e3a\u7684\u5171\u4eab\u5185\u5b58: </li> <li>\u5b9e\u9645\u7684\u5171\u4eab\u5185\u5b58: \u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u5185\u5b58\u526f\u672c\uff0c\u4ed6\u4eec\u4e4b\u95f4\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u540c\u6b65 </li> <li>x86\uff1a\u5e02\u9762 \u201c\u6700\u5f3a\u201d \u5185\u5b58\u6a21\u578b (\u7c7b\u6bd4 ARM/RISC-V) </li> </ul> <p>mem_model.c: C<pre><code>#include &lt;thread.h&gt;\n#include &lt;stdatomic.h&gt;\n\nint x = 0, y = 0;\natomic_int flag;\n\n#define F1  1\n#define F2  2\n\n#define FLAG \\\n    atomic_load(&amp;flag)\n#define FLAG_XOR(val) \\\n    atomic_fetch_xor(&amp;flag, val)\n#define WAIT_FOR(cond) \\\n    while (!(cond))    \\\n        ;\n\n__attribute__((noinline))\nvoid write_x_read_y() {\n    int y_val;\n\n    asm volatile(\n        \"movl $1, %0;\" // x = 1\n        \"movl %2, %1;\" // y_val = y\n        : \"=m\"(x), \"=r\"(y_val)\n        : \"m\"(y)\n    );\n\n    printf(\"%d \", y_val);\n}\n\n__attribute__((noinline))\nvoid write_y_read_x() {\n    int x_val;\n\n    asm volatile(\n        \"movl $1, %0;\" // y = 1\n        \"movl %2, %1;\" // x_val = x\n        : \"=m\"(y), \"=r\"(x_val)\n        : \"m\"(x)\n    );\n\n    printf(\"%d \", x_val);\n}\n\nvoid T_1(int id) {\n    while (1) {\n        // Wait until F1 is raised.\n        WAIT_FOR((FLAG &amp; F1));\n\n        write_x_read_y();\n\n        // Put F1 down.\n        FLAG_XOR(F1);\n    }\n}\n\nvoid T_2() {\n    while (1) {\n        // Wait until F2 is raised.\n        WAIT_FOR((FLAG &amp; F2));\n\n        write_y_read_x();\n\n        // Put F2 down.\n        FLAG_XOR(F2);\n    }\n}\n\nvoid T_flag() {\n    while (1) {\n        x = 0;\n        y = 0;\n        __sync_synchronize(); // full barrier\n        usleep(1);            // + delay\n\n        // Now, x = 0, y = 0, and flag = 0.\n        // T_1 and T_2 should be waiting for their flags.\n        assert(FLAG == 0);\n\n        // flag = F1 | F2; Both flags are raised.\n        FLAG_XOR(F1 | F2);\n\n        // T1 and T2 are ready to go...\n        // They will eventually put F1 and F2 down.\n        WAIT_FOR(FLAG == 0);\n\n        printf(\"\\n\");\n        fflush(stdout);\n    }\n}\n\nint main() {\n    // All infinite loops\n    create(T_1);\n    create(T_2);\n    create(T_flag);\n}\n</code></pre></p> <p><code>./mem-model  | head -n 10000 | sort | uniq -c</code>\u8f93\u51fa\uff1a Bash<pre><code>7978 0 0 \n1783 0 1 \n 237 1 0 \n   2 1 1\n</code></pre></p> T_1 T_2 \u2460 x = 1  \u2461 load y \u2462 y = 1  \u2463 load x <p>\u51fa\u73b00 0\u7684\u539f\u56e0\u662f\u771f\u6b63\u7684memory model\u548c\u6211\u4eec\u60f3\u8c61\u7684\u5e76\u4e0d\u4e00\u6837\u3002\u5904\u7406\u5668\u4e5f\u662f\u7f16\u8bd1\u5668:</p> <ul> <li>\u9884\u53d6\u72b6\u6001\u673a\u6267\u884c\u7684\u82e5\u5e72\u6b65\uff0c\u7136\u540e\u50cf\u7f16\u8bd1\u5668\u4e00\u6837\u4f18\u5316</li> <li>Load(x); Store(y)</li> <li>x \u2260 y \u2192 \u4e24\u6761\u6307\u4ee4\u6267\u884c\u7684\u5148\u540e\u987a\u5e8f\u5c31\u65e0\u6240\u8c13</li> <li>Load cache miss \u2192 store \u53ef\u4ee5\u76f4\u63a5\u6267\u884c</li> </ul> </li> </ol>"},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-6-1","title":"Lecture 6 \u5e76\u53d1\u63a7\u5236\uff1a\u4e92\u65a5 (1)","text":"<p>Take-away Messages</p> <p>\u5e76\u53d1\u7f16\u7a0b \u201c\u5f88\u96be\u201d\uff1a\u60f3\u8981\u5b8c\u5168\u7406\u89e3\u5e76\u53d1\u7a0b\u5e8f\u7684\u884c\u4e3a\uff0c\u662f\u975e\u5e38\u56f0\u96be\u7684\u2014\u2014\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a \u201c\u4e07\u80fd\u201d \u7684\u8c03\u5ea6\u5668\u53bb\u5e2e\u52a9\u6211\u4eec\u6c42\u89e3 NP-\u5b8c\u5168\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u4eba\u7c7b\u5e94\u5bf9\u8fd9\u79cd\u590d\u6742\u6027\u7684\u65b9\u6cd5\u5c31\u662f\u9000\u56de\u5230\u4e0d\u5e76\u53d1\u3002\u901a\u8fc7\u4e92\u65a5\u5b9e\u73b0 stop/resume the world\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u5e76\u53d1\u7a0b\u5e8f\u7684\u6267\u884c\u53d8\u5f97\u66f4\u5bb9\u6613\u7406\u89e3\u2014\u2014\u800c\u53ea\u8981\u7a0b\u5e8f\u4e2d \u201c\u80fd\u5e76\u884c\u201d \u7684\u90e8\u5206\u8db3\u591f\u591a\uff0c\u4e32\u884c\u5316\u4e00\u5c0f\u90e8\u5206\u4e5f\u5e76\u4e0d\u4f1a\u5bf9\u6027\u80fd\u5e26\u6765\u81f4\u547d\u7684\u5f71\u54cd\u3002</p> <p>1.</p>"},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-7-2","title":"Lecture 7 \u5e76\u53d1\u63a7\u5236\uff1a\u4e92\u65a5 (2)","text":""},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-8","title":"Lecture 8 \u8c03\u8bd5\u7406\u8bba\u4e0e\u5b9e\u8df5","text":""},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-9-1","title":"Lecture 9 \u5e76\u53d1\u63a7\u5236\uff1a\u540c\u6b65 (1)","text":""},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-10-2","title":"Lecture 10 \u5e76\u53d1\u63a7\u5236\uff1a\u540c\u6b65 (2)","text":""},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-11","title":"Lecture 11 \u771f\u5b9e\u4e16\u754c\u7684\u5e76\u53d1\u7f16\u7a0b","text":""},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-12-bugs","title":"Lecture 12 \u5e76\u53d1 Bugs","text":""},{"location":"OS/%E5%B9%B6%E5%8F%91/#lecture-13-bugs","title":"Lecture 13 \u5e94\u5bf9 (\u5e76\u53d1) Bugs","text":""},{"location":"OS/%E6%80%BB%E7%BB%93/","title":"\u603b\u7ed3","text":"<p> \u7ea6 470 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"OS/%E6%80%BB%E7%BB%93/#_2","title":"\u8d44\u6599","text":"<ul> <li>Yanyan's wiki</li> <li>\u8bfe\u7a0b\u7f51\u7ad9</li> <li>video</li> </ul>"},{"location":"OS/%E6%80%BB%E7%BB%93/#_3","title":"\u64cd\u4f5c\u7cfb\u7edf\u662f\u4ec0\u4e48","text":"<ol> <li>\u5728\u5e94\u7528\u7a0b\u5e8f\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = \u5bf9\u8c61 + API\u3002\u4ece\u5e94\u7528\u7a0b\u5e8f\u7684\u89c6\u89d2\u770b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7684\u5bf9\u8c61 (\u8fdb\u7a0b/\u7ebf\u7a0b\u3001\u5730\u5740\u7a7a\u95f4\u3001\u6587\u4ef6\u3001\u8bbe\u5907\u2026\u2026) \u548c\u64cd\u7eb5\u5b83\u4eec\u7684 API (\u7cfb\u7edf\u8c03\u7528)\u3002</li> <li>\u5728\u786c\u4ef6\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = C \u7a0b\u5e8f\u3002\u4ece\u786c\u4ef6\u7684\u89c6\u89d2\u770b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u662f\u4e00\u4e2a\u62e5\u6709\u8bbf\u95ee\u5168\u90e8\u786c\u4ef6\u529f\u80fd\u7684\u7a0b\u5e8f\u3002\u786c\u4ef6\u4f1a\u5e2e\u52a9\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u6700\u521d\u7684\u521d\u59cb\u5316\u548c\u52a0\u8f7d\uff0c\u4e4b\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u52a0\u8f7d\u5b8c\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u540e\uff0c\u4ece\u6b64\u4f5c\u4e3a \u201c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u201d \u5728\u540e\u53f0\u7ba1\u7406\u6574\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u3002</li> <li>\u5728\u4e0a\u5e1d\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = \u4e00\u4e2a\u6570\u5b66\u5bf9\u8c61\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8ba1\u7b97\u673a\u7cfb\u7edf (\u7535\u8def) \u5efa\u6a21\u6210\u6709\u9650\u72b6\u6001\u673a\u6a21\u578b\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u628a\u8fd0\u884c\u5728\u786c\u4ef6\u4e0a\u7684\u4efb\u4f55\u8f6f\u4ef6 (\u5305\u62ec\u64cd\u4f5c\u7cfb\u7edf) \u5efa\u6a21\u6210\u72b6\u6001\u673a\u3002</li> </ol> <p>Operating System concept</p> <p>Operating System: A body of software, in fact, that is responsible for making it easy to run programs (even allowing you to seemingly run many at the same time), allowing programs to share memory, enabling programs to interact with devices, and other fun stuff like that. (OSTEP)</p>"},{"location":"OS/%E6%80%BB%E7%BB%93/#lecture-1","title":"Lecture 1 \u64cd\u4f5c\u7cfb\u7edf\u6982\u8ff0","text":"<ol> <li>\u65f6\u949f\u3001\u5bfc\u7ebf\u3001\u903b\u8f91\u95e8(NAND\uff0c\u5373\u4e0e\u975e\u95e8)\u3001\u5bc4\u5b58\u5668\u662f\u6570\u5b57\u7cfb\u7edf\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\uff1a\u6570\u5b57\u7cfb\u7edf\u5728\u65f6\u949f\u9a71\u52a8\u4e0b\u79bb\u6563\u5730\u66f4\u65b0\u4e0b\u4e00\u5468\u671f\u7684\u5bc4\u5b58\u5668\u72b6\u6001\u3002</li> <li>\u6570\u5b57\u7535\u8def\u6a21\u62df\u5668\uff0c\u7f16\u8bd1\uff1a<code>gcc -o logisim -I. logisim.c</code>, \u5176\u4e2d<code>-I.</code>\u6307\u5b9a\u5f53\u524d\u76ee\u5f55\uff08<code>.</code>\uff09\u4e3a\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84\uff0c\u8fd9\u610f\u5473\u7740\u7f16\u8bd1\u5668\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627e\u5934\u6587\u4ef6\u3002\u8fd0\u884c\uff1a<code>./logisim</code>\uff0c\u53ef\u89c6\u5316\u8fd0\u884c: <code>make run</code>\u6216<code>./logisim | python seg-display.py</code>\u3002\u5355\u72ec\u8fd0\u884c<code>python seg-display.py</code>\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u7b49\u7740\u8f93\u5165\uff0c\u6b64\u65f6\u8f93\u5165<code>A=1</code>\u5373\u53ef\u70b9\u4eae\u6570\u7801\u7ba1\u3002</li> <li>RISC-V \u5904\u7406\u5668\u6a21\u62df\u5668\uff0c\u7f16\u8bd1\uff1a<code>gcc -g -o mini-rv32ima main.c</code>\u6216<code>make</code>\uff0c\u8fd0\u884c\uff1a<code>./mini-rv32ima bin/fib.rv32i-bin 10</code>\uff0c\u7ed3\u679c\u5b58\u5728a0\u5bc4\u5b58\u5668\u3002</li> </ol>"},{"location":"OS/%E6%8C%81%E4%B9%85%E5%8C%96/","title":"\u6301\u4e45\u5316","text":"<p> \u7ea6 471 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"OS/%E6%8C%81%E4%B9%85%E5%8C%96/#_2","title":"\u8d44\u6599","text":"<ul> <li>Yanyan's wiki</li> <li>\u8bfe\u7a0b\u7f51\u7ad9</li> <li>video</li> </ul>"},{"location":"OS/%E6%8C%81%E4%B9%85%E5%8C%96/#_3","title":"\u64cd\u4f5c\u7cfb\u7edf\u662f\u4ec0\u4e48","text":"<ol> <li>\u5728\u5e94\u7528\u7a0b\u5e8f\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = \u5bf9\u8c61 + API\u3002\u4ece\u5e94\u7528\u7a0b\u5e8f\u7684\u89c6\u89d2\u770b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7684\u5bf9\u8c61 (\u8fdb\u7a0b/\u7ebf\u7a0b\u3001\u5730\u5740\u7a7a\u95f4\u3001\u6587\u4ef6\u3001\u8bbe\u5907\u2026\u2026) \u548c\u64cd\u7eb5\u5b83\u4eec\u7684 API (\u7cfb\u7edf\u8c03\u7528)\u3002</li> <li>\u5728\u786c\u4ef6\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = C \u7a0b\u5e8f\u3002\u4ece\u786c\u4ef6\u7684\u89c6\u89d2\u770b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u662f\u4e00\u4e2a\u62e5\u6709\u8bbf\u95ee\u5168\u90e8\u786c\u4ef6\u529f\u80fd\u7684\u7a0b\u5e8f\u3002\u786c\u4ef6\u4f1a\u5e2e\u52a9\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u6700\u521d\u7684\u521d\u59cb\u5316\u548c\u52a0\u8f7d\uff0c\u4e4b\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u52a0\u8f7d\u5b8c\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u540e\uff0c\u4ece\u6b64\u4f5c\u4e3a \u201c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u201d \u5728\u540e\u53f0\u7ba1\u7406\u6574\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u3002</li> <li>\u5728\u4e0a\u5e1d\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = \u4e00\u4e2a\u6570\u5b66\u5bf9\u8c61\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8ba1\u7b97\u673a\u7cfb\u7edf (\u7535\u8def) \u5efa\u6a21\u6210\u6709\u9650\u72b6\u6001\u673a\u6a21\u578b\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u628a\u8fd0\u884c\u5728\u786c\u4ef6\u4e0a\u7684\u4efb\u4f55\u8f6f\u4ef6 (\u5305\u62ec\u64cd\u4f5c\u7cfb\u7edf) \u5efa\u6a21\u6210\u72b6\u6001\u673a\u3002</li> </ol> <p>Operating System concept</p> <p>Operating System: A body of software, in fact, that is responsible for making it easy to run programs (even allowing you to seemingly run many at the same time), allowing programs to share memory, enabling programs to interact with devices, and other fun stuff like that. (OSTEP)</p>"},{"location":"OS/%E6%8C%81%E4%B9%85%E5%8C%96/#lecture-1","title":"Lecture 1 \u64cd\u4f5c\u7cfb\u7edf\u6982\u8ff0","text":"<ol> <li>\u65f6\u949f\u3001\u5bfc\u7ebf\u3001\u903b\u8f91\u95e8(NAND\uff0c\u5373\u4e0e\u975e\u95e8)\u3001\u5bc4\u5b58\u5668\u662f\u6570\u5b57\u7cfb\u7edf\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\uff1a\u6570\u5b57\u7cfb\u7edf\u5728\u65f6\u949f\u9a71\u52a8\u4e0b\u79bb\u6563\u5730\u66f4\u65b0\u4e0b\u4e00\u5468\u671f\u7684\u5bc4\u5b58\u5668\u72b6\u6001\u3002</li> <li>\u6570\u5b57\u7535\u8def\u6a21\u62df\u5668\uff0c\u7f16\u8bd1\uff1a<code>gcc -o logisim -I. logisim.c</code>, \u5176\u4e2d<code>-I.</code>\u6307\u5b9a\u5f53\u524d\u76ee\u5f55\uff08<code>.</code>\uff09\u4e3a\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84\uff0c\u8fd9\u610f\u5473\u7740\u7f16\u8bd1\u5668\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627e\u5934\u6587\u4ef6\u3002\u8fd0\u884c\uff1a<code>./logisim</code>\uff0c\u53ef\u89c6\u5316\u8fd0\u884c: <code>make run</code>\u6216<code>./logisim | python seg-display.py</code>\u3002\u5355\u72ec\u8fd0\u884c<code>python seg-display.py</code>\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u7b49\u7740\u8f93\u5165\uff0c\u6b64\u65f6\u8f93\u5165<code>A=1</code>\u5373\u53ef\u70b9\u4eae\u6570\u7801\u7ba1\u3002</li> <li>RISC-V \u5904\u7406\u5668\u6a21\u62df\u5668\uff0c\u7f16\u8bd1\uff1a<code>gcc -g -o mini-rv32ima main.c</code>\u6216<code>make</code>\uff0c\u8fd0\u884c\uff1a<code>./mini-rv32ima bin/fib.rv32i-bin 10</code>\uff0c\u7ed3\u679c\u5b58\u5728a0\u5bc4\u5b58\u5668\u3002</li> </ol>"},{"location":"OS/%E7%BB%AA%E8%AE%BA/","title":"\u7eea\u8bba","text":"<p> \u7ea6 2032 \u4e2a\u5b57  323 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p>"},{"location":"OS/%E7%BB%AA%E8%AE%BA/#_2","title":"\u8d44\u6599","text":"<ul> <li>Yanyan's wiki</li> <li>\u8bfe\u7a0b\u7f51\u7ad9</li> <li>video</li> </ul>"},{"location":"OS/%E7%BB%AA%E8%AE%BA/#_3","title":"\u64cd\u4f5c\u7cfb\u7edf\u662f\u4ec0\u4e48","text":"<ol> <li>\u5728\u5e94\u7528\u7a0b\u5e8f\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = \u5bf9\u8c61 + API\u3002\u4ece\u5e94\u7528\u7a0b\u5e8f\u7684\u89c6\u89d2\u770b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7684\u5bf9\u8c61 (\u8fdb\u7a0b/\u7ebf\u7a0b\u3001\u5730\u5740\u7a7a\u95f4\u3001\u6587\u4ef6\u3001\u8bbe\u5907\u2026\u2026) \u548c\u64cd\u7eb5\u5b83\u4eec\u7684 API (\u7cfb\u7edf\u8c03\u7528)\u3002</li> <li>\u5728\u786c\u4ef6\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = C \u7a0b\u5e8f\u3002\u4ece\u786c\u4ef6\u7684\u89c6\u89d2\u770b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u662f\u4e00\u4e2a\u62e5\u6709\u8bbf\u95ee\u5168\u90e8\u786c\u4ef6\u529f\u80fd\u7684\u7a0b\u5e8f\u3002\u786c\u4ef6\u4f1a\u5e2e\u52a9\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u6700\u521d\u7684\u521d\u59cb\u5316\u548c\u52a0\u8f7d\uff0c\u4e4b\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u52a0\u8f7d\u5b8c\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u540e\uff0c\u4ece\u6b64\u4f5c\u4e3a \u201c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u201d \u5728\u540e\u53f0\u7ba1\u7406\u6574\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u3002</li> <li>\u5728\u4e0a\u5e1d\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = \u4e00\u4e2a\u6570\u5b66\u5bf9\u8c61\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8ba1\u7b97\u673a\u7cfb\u7edf (\u7535\u8def) \u5efa\u6a21\u6210\u6709\u9650\u72b6\u6001\u673a\u6a21\u578b\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u628a\u8fd0\u884c\u5728\u786c\u4ef6\u4e0a\u7684\u4efb\u4f55\u8f6f\u4ef6 (\u5305\u62ec\u64cd\u4f5c\u7cfb\u7edf) \u5efa\u6a21\u6210\u72b6\u6001\u673a\u3002</li> </ol> <p>Operating System concept</p> <p>Operating System: A body of software, in fact, that is responsible for making it easy to run programs (even allowing you to seemingly run many at the same time), allowing programs to share memory, enabling programs to interact with devices, and other fun stuff like that. (OSTEP)</p>"},{"location":"OS/%E7%BB%AA%E8%AE%BA/#lecture-1","title":"Lecture 1 \u64cd\u4f5c\u7cfb\u7edf\u6982\u8ff0","text":"<ol> <li>\u65f6\u949f\u3001\u5bfc\u7ebf\u3001\u903b\u8f91\u95e8(NAND\uff0c\u5373\u4e0e\u975e\u95e8)\u3001\u5bc4\u5b58\u5668\u662f\u6570\u5b57\u7cfb\u7edf\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\uff1a\u6570\u5b57\u7cfb\u7edf\u5728\u65f6\u949f\u9a71\u52a8\u4e0b\u79bb\u6563\u5730\u66f4\u65b0\u4e0b\u4e00\u5468\u671f\u7684\u5bc4\u5b58\u5668\u72b6\u6001\u3002</li> <li>\u6570\u5b57\u7535\u8def\u6a21\u62df\u5668\uff0c\u7f16\u8bd1\uff1a<code>gcc -o logisim -I. logisim.c</code>, \u5176\u4e2d<code>-I.</code>\u6307\u5b9a\u5f53\u524d\u76ee\u5f55\uff08<code>.</code>\uff09\u4e3a\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84\uff0c\u8fd9\u610f\u5473\u7740\u7f16\u8bd1\u5668\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627e\u5934\u6587\u4ef6\u3002\u8fd0\u884c\uff1a<code>./logisim</code>\uff0c\u53ef\u89c6\u5316\u8fd0\u884c: <code>make run</code>\u6216<code>./logisim | python seg-display.py</code>\u3002\u5355\u72ec\u8fd0\u884c<code>python seg-display.py</code>\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u7b49\u7740\u8f93\u5165\uff0c\u6b64\u65f6\u8f93\u5165<code>A=1</code>\u5373\u53ef\u70b9\u4eae\u6570\u7801\u7ba1\u3002</li> <li>RISC-V \u5904\u7406\u5668\u6a21\u62df\u5668\uff0c\u7f16\u8bd1\uff1a<code>gcc -g -o mini-rv32ima main.c</code>\u6216<code>make</code>\uff0c\u8fd0\u884c\uff1a<code>./mini-rv32ima bin/fib.rv32i-bin 10</code>\uff0c\u7ed3\u679c\u5b58\u5728a0\u5bc4\u5b58\u5668\u3002CSR\uff08Control and Status Register\uff0c\u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668\uff09\u662f\u4e00\u7ec4\u7279\u6b8a\u7684\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u63a7\u5236\u548c\u76d1\u63a7\u5904\u7406\u5668\u7684\u8fd0\u884c\u72b6\u6001\u3002\u8fd9\u4e9b\u5bc4\u5b58\u5668\u901a\u5e38\u5305\u542b\u4e86\u5904\u7406\u5668\u7684\u5404\u79cd\u914d\u7f6e\u4fe1\u606f\u3001\u72b6\u6001\u4fe1\u606f\u548c\u63a7\u5236\u4fe1\u606f\uff0c\u4f8b\u5982\u4e2d\u65ad\u63a7\u5236\u3001\u65f6\u949f\u63a7\u5236\u3001\u6027\u80fd\u76d1\u63a7\u3001\u7535\u6e90\u7ba1\u7406\u7b49\u3002</li> </ol>"},{"location":"OS/%E7%BB%AA%E8%AE%BA/#lecture-2","title":"Lecture 2 \u5e94\u7528\u89c6\u89d2\u7684\u64cd\u4f5c\u7cfb\u7edf","text":"<p>Take-away Messages</p> <p>Everything (\u9ad8\u7ea7\u8bed\u8a00\u4ee3\u7801\u3001\u673a\u5668\u4ee3\u7801) \u90fd\u662f\u72b6\u6001\u673a\uff1b\u800c\u7f16\u8bd1\u5668\u5b9e\u73b0\u4e86\u4e24\u79cd\u72b6\u6001\u673a\u4e4b\u95f4\u7684\u7ffb\u8bd1\u3002\u65e0\u8bba\u4f55\u79cd\u72b6\u6001\u673a\uff0c\u5728\u6ca1\u6709\u64cd\u4f5c\u7cfb\u7edf\u65f6\uff0c\u5b83\u4eec\u53ea\u80fd\u505a\u7eaf\u7cb9\u7684\u8ba1\u7b97\uff0c\u751a\u81f3\u90fd\u4e0d\u80fd\u628a\u7ed3\u679c\u4f20\u9012\u5230\u7a0b\u5e8f\u4e4b\u5916\u2014\u2014\u800c\u7a0b\u5e8f\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u6c9f\u901a\u7684\u552f\u4e00\u6865\u6881\u662f\u7cfb\u7edf\u8c03\u7528 (\u4f8b\u5982 x86-64 \u7684 <code>syscall</code> \u6307\u4ee4)\u3002\u5982\u6b64\u91cd\u8981\u7684\u6865\u6881\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u81ea\u7136\u4e5f\u6709\u5de5\u5177\uff1a<code>strace</code> \u53ef\u4ee5\u67e5\u770b\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684\u7cfb\u7edf\u8c03\u7528\u5e8f\u5217\u3002</p> <ol> <li>hello.c: \u67e5\u770b\u6587\u4ef6\u7c7b\u578b<code>file a.out</code> C<pre><code>int main() {\n    printf(\"Hello, World\\n\");\n}\n</code></pre> Bash<pre><code>linux$ gcc hello.c \nlinux$ ./a.out \nHello, World\nlinux$ file a.out \na.out: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=8fb1a66864c9ab4a1a8f9b6b2160b2226f1c03d3, for GNU/Linux 3.2.0, not stripped\nlinux$ objdump -d a.out | less\nlinux$ readelf -a a.out | less\nlinux$ gcc hello.c -static # \u9759\u6001\u94fe\u63a5\u610f\u5473\u7740\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5c06\u5305\u542b\u6240\u6709\u9700\u8981\u7684\u5e93\u4ee3\u7801\uff0c\u56e0\u6b64\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u4e2d\u5df2\u5b89\u88c5\u7684\u5171\u4eab\u5e93\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u53ef\u6267\u884c\u6587\u4ef6\u53ef\u4ee5\u5728\u4efb\u4f55\u652f\u6301\u8be5\u67b6\u6784\u7684\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u800c\u4e0d\u9700\u8981\u62c5\u5fc3\u5e93\u7684\u517c\u5bb9\u6027\u95ee\u9898\u3002\u4f46\u662f\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u53ef\u6267\u884c\u6587\u4ef6\u4f1a\u6bd4\u8f83\u5927\uff0c\u56e0\u4e3a\u5b83\u5305\u542b\u4e86\u6240\u6709\u7684\u5e93\u4ee3\u7801\u3002\nlinux$ file a.out \na.out: ELF 64-bit LSB executable, x86-64, version 1 (GNU/Linux), statically linked, BuildID[sha1]=80ecb022dad2875af2eaf8f2b38d7a62d40ae20e, for GNU/Linux 3.2.0, not stripped\nlinux$ objdump -d a.out | less  # \u663e\u7136\u4e0d\u662f\u6700\u5c0f\u7684\u53ef\u6267\u884c\u6587\u4ef6\nlinux$ readelf -a a.out | less\n</code></pre></li> <li> <p>\u8bd5\u8bd5\u7a7a\u51fd\u6570\uff1a C<pre><code>int main() {\n}\n</code></pre> Bash<pre><code>linux$ gcc -c hello.c   # \u53ea\u7f16\u8bd1\u4e0d\u94fe\u63a5\uff0c\u751f\u6210hello.o\nlinux$ ld hello.o       # \u94fe\u63a5\uff0c\u751f\u6210a.out\uff0c\u867d\u7136\u6709warning\nld: warning: cannot find entry symbol _start; defaulting to 0000000000401000\nlinux$ ./a.out \nSegmentation fault\nlinux$ gdb a.out        # \u5f00\u59cb\u8c03\u8bd5\n</code></pre></p> <p>Segmentation fault</p> <p>\u8868\u793a\u7a0b\u5e8f\u8bbf\u95ee\u4e86\u4e0d\u5141\u8bb8\u8bbf\u95ee\u7684\u5185\u5b58\u533a\u57df\u3002\u8fd9\u901a\u5e38\u662f\u7531\u4e8e\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u5bfc\u81f4\u7684\uff0c\u4f8b\u5982\u6307\u9488\u9519\u8bef\u3001\u6570\u7ec4\u8d8a\u754c\u3001\u6808\u6ea2\u51fa\u7b49\u3002</p> </li> <li> <p>\u5229\u7528gdb\u8c03\u8bd5\uff0c\u5728\u6267\u884creturn\u4e4b\u524d\uff0cM[rsp]\u91cc\u662f1(rsp: Stack Pointer\uff0c\u5373\u6808\u6307\u9488)\uff0c\u800c\u6267\u884creturn\u662f\u5c06M[rsp]\u8d4b\u503c\u7ed9PC\uff0crsp+8\uff08\u5c06\u8fd4\u56de\u5730\u5740\u4ece\u6808\u9876\u5f39\u51fa\uff0c\u5e76\u7f29\u6808\uff09\uff0cPC\u6307\u5411\u4e861\uff08\u663e\u7136\u662f\u4e0d\u53ef\u8bbf\u95ee\u7684\u5730\u5740\uff09\uff0c\u6240\u4ee5\u4f1a\u51fa\u73b0segmentation fault\u3002 Bash<pre><code>(gdb) si       # \u4f9d\u6b21\u5355\u6b65\u6267\u884c\uff0c\u53d1\u73b0\u5230ret\u6307\u4ee4\u65f6\u518d\u4e0b\u4e00\u6b65\u5c31\u4f1a\u51fa\u73b0segmentation fault\n0x0000000000000001 in ?? ()  # \u8fd9\u91cc\u76841\u6709\u95ee\u9898\n(gdb) p $rsp   # \u6253\u5370\u6808\u6307\u9488\u7684\u503c, \u8f93\u51fa $1 = (void *) 0x7fffffffdcb0\n(gdb) x/x $rsp # \u67e5\u770bM[rsp]\uff0c\u8f93\u51fa 0x7fffffffdcb0: 0x00000001\n</code></pre></p> </li> <li>\u6700\u5c0f\u7684hello world\u7a0b\u5e8f\uff1aminimal.S GAS<pre><code>#include &lt;sys/syscall.h&gt;\n\n// The x86-64 system call Application Binary Interface (ABI):\n//     System call number: RAX\n//     Arguments: RDI, RSI, RDX, RCX, R8, R9\n//     Return value: RAX\n// See also: syscall(2) syscalls(2)\n\n#define syscall3(id, a1, a2, a3) \\\n    movq $SYS_##id, %rax; \\\n    movq $a1, %rdi; \\\n    movq $a2, %rsi; \\\n    movq $a3, %rdx; \\\n    syscall\n\n#define syscall2(id, a1, a2)  syscall3(id, a1, a2, 0)\n#define syscall1(id, a1)  syscall2(id, a1, 0)\n\n.globl _start\n_start:\n    syscall3(write, 1, addr1, addr2 - addr1) # \u6267\u884cwrite\u8fd9\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u5f80\u7f16\u53f7\u4e3a1\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08\u5373\u6807\u51c6\u8f93\u51fa\uff09\u5199\u5165\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3aaddr2-addr1\n    syscall1(exit, 1)\n\naddr1:\n    .ascii \"\\033[01;31mHello, OS World\\033[0m\\n\"\naddr2:\n</code></pre></li> <li> <p>\u8ddf\u8e2a\u7cfb\u7edf\u8c03\u7528\uff1a<code>strace -f gcc -o hello hello.c &amp;| vim -</code> (fish\u53ef\u7528\uff0cbash\u4e0d\u53ef\u7528)\u3002<code>&amp;</code> \u7b26\u53f7\u8868\u793a\u5c06\u547d\u4ee4\u653e\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u800c <code>|</code> \u7b26\u53f7\u8868\u793a\u5c06 strace \u547d\u4ee4\u7684\u8f93\u51fa\u4f5c\u4e3a vim \u7f16\u8f91\u5668\u7684\u8f93\u5165\u3002<code>-</code> \u8868\u793a vim \u5e94\u8be5\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u6570\u636e\uff0c\u800c\u4e0d\u662f\u4ece\u4e00\u4e2a\u6587\u4ef6\u3002vim\u6253\u5f00\u540e\u7528<code>:%!grep -v -e '-1'</code>\u8fc7\u6ee4\u6389-1\u7684\u884c\uff0c\u7528<code>:%!grep -v -e open</code>\u8fc7\u6ee4\u6389\u5e26open\u7684\u884c\u3002</p> </li> <li> <p>Debug hanoi-nr.c\u8981\u914d\u7f6e\u597d\u7684.vscode/launch.json     JSON<pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"C Debugger: Current File\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/hanoi-nr\",\n            \"args\": [],\n            \"cwd\": \"${workspaceFolder}\",\n        }\n    ]\n}\n</code></pre></p> <p>\u9012\u5f52\u7684\u6c49\u8bfa\u5854 hanoi-r.c\uff1a C<pre><code>#include &lt;stdio.h&gt;\n\nint hanoi(int n, char from, char to, char via) {\n    if (n == 1) {\n        printf(\"%c -&gt; %c\\n\", from, to);\n        return 1;\n    } else {\n        int c1 = hanoi(n - 1, from, via, to);\n        hanoi(1, from, to, via);\n        int c2 = hanoi(n - 1, via, to, from);\n        return c1 + c2 + 1;\n    }\n}\n</code></pre></p> <p>\u975e\u9012\u5f52\u7684\u6c49\u8bfa\u5854 hanoi-nr.c\uff1a C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;assert.h&gt;\n\nstruct Frame {\n    // Each frame has a program counter to keep track its next\n    // to-be-executed statement.\n    int pc;\n\n    // The internal state of the frame. This state includes\n    // both arguments and local variables (if any).\n    //\n    // Arguments:\n    int n;\n    char from, to, via;\n\n    // Local variables:\n    int c1, c2;\n};\n\ntypedef struct Frame Frame;\n\nint hanoi(int n, char from, char to, char via) {\n    Frame stk[64];\n    Frame *top = stk - 1;\n\n    // Function call: push a new frame (PC=0) onto the stack\n    #define call(...) ({ *(++top) = (Frame){.pc = 0, __VA_ARGS__}; })\n\n    // Function return: pop the top-most frame\n    #define ret(val) ({ top--; retval = (val); })\n\n\n    // The last function-return's value. It is not obvious\n    // that we only need one retval.\n    int retval = 0;\n\n    // The initial call to the recursive function\n    call(n, from, to, via);\n\n    while (1) {\n        // Fetch the top-most frame.\n        Frame *f = top;\n        if (top &lt; stk) {\n            // No top-most frame any more; we're done.\n            break;\n        }\n\n        // Jumps may change this default next pc.\n        int next_pc = f-&gt;pc + 1;\n\n        // Single step execution.\n\n        // Extract the parameters from the current frame. (It's\n        // generally a bad idea to reuse variable names in\n        // practice; but we did it here for readability.)\n        int n = f-&gt;n, from = f-&gt;from, to = f-&gt;to, via = f-&gt;via;\n\n        switch (f-&gt;pc) {\n            case 0:\n                if (n == 1) {\n                    printf(\"%c -&gt; %c\\n\", from, to);\n                    ret(1);\n                }\n                break;\n            case 1: call(n - 1, from, via, to); break;\n            case 2: f-&gt;c1 = retval; break;\n            case 3: call(1, from, to, via); break;\n            case 4: call(n - 1, via, to, from); break;\n            case 5: f-&gt;c2 = retval; break;\n            case 6: ret(f-&gt;c1 + f-&gt;c2 + 1); break;\n            default: assert(0);\n        }\n\n        f-&gt;pc = next_pc;\n    }\n\n    return retval;\n}\n</code></pre></p> <p>Call and Return</p> <p>\u51fd\u6570\u8c03\u7528\uff1a\u5728\u7a0b\u5e8f\u4e2d\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u5c06\u5f53\u524d\u6267\u884c\u7684\u6307\u4ee4\u5730\u5740\uff08\u5373\u7a0b\u5e8f\u8ba1\u6570\u5668\uff09\u4fdd\u5b58\u5230\u6808\u4e2d\uff0c\u5e76\u8df3\u8f6c\u5230\u88ab\u8c03\u7528\u51fd\u6570\u7684\u8d77\u59cb\u5730\u5740\u3002\u88ab\u8c03\u7528\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u7a0b\u5e8f\u4f1a\u4ece\u6808\u4e2d\u53d6\u51fa\u4fdd\u5b58\u7684\u6307\u4ee4\u5730\u5740\uff0c\u5e76\u8df3\u8f6c\u5230\u8be5\u5730\u5740\u7ee7\u7eed\u6267\u884c\u3002</p> <p>\u51fd\u6570\u8fd4\u56de\uff1a\u5728\u51fd\u6570\u4e2d\u4f7f\u7528return\u8bed\u53e5\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u5c06\u8fd4\u56de\u503c\u4fdd\u5b58\u5230\u6808\u4e2d\uff0c\u5e76\u8df3\u8f6c\u5230\u8c03\u7528\u51fd\u6570\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u3002\u8c03\u7528\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u7a0b\u5e8f\u4f1a\u4ece\u6808\u4e2d\u53d6\u51fa\u4fdd\u5b58\u7684\u8fd4\u56de\u503c\uff0c\u5e76\u5c06\u5176\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0ccall\u662f\u957f\u51fa\u65b0\u7684frame(\u6ce8\u610f\u6bcf\u4e2aframe\u90fd\u6709\u81ea\u5df1\u7684pc\uff0c\u65b0\u957f\u51fa\u7684frame.pc = 0\uff0c\u65b0frame\u5f00\u59cb\u6267\u884c\u65f6\uff0c\u90fd\u662f\u4ece\u81ea\u5df1fram\u7684pc=0\u5f00\u59cb\u4e00\u6b65\u6b65\u6267\u884c\u81ea\u5df1pc=1/2/3/...)\uff0creturn\u662f\u5f39\u51fa\u5f53\u524d\u7684frame\u5e76\u8bb0\u4e0b\u8fd4\u56de\u503c\u3002</p> </li> <li> <p>\u7f16\u8bd1\u5668\u4e0e\u7f16\u8bd1\u4f18\u5316</p> <p>\u7f16\u8bd1\u4f18\u5316</p> <p>C \u8bed\u8a00\u7f16\u8bd1\u5668\u5728\u8fdb\u884c\u4ee3\u7801\u4f18\u5316\u65f6\uff0c\u9075\u5faa\u7684\u57fa\u672c\u51c6\u5219\u662f\u5728\u4e0d\u6539\u53d8\u7a0b\u5e8f\u7684\u8bed\u4e49 (\u5373\u7a0b\u5e8f\u7684\u884c\u4e3a\u548c\u8f93\u51fa\u7ed3\u679c) \u7684\u524d\u63d0\u4e0b\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u548c/\u6216\u51cf\u5c11\u7a0b\u5e8f\u7684\u8d44\u6e90\u6d88\u8017</p> <p>\u7f16\u8bd1\u4f18\u5316\u4e2d\u6700\u91cd\u8981\u7684 \u201c\u4e09\u677f\u65a7\u201d\uff1a</p> <ul> <li>\u51fd\u6570\u5185\u8054\uff1a\u5c06\u51fd\u6570\u8c03\u7528\u66ff\u6362\u4e3a\u51fd\u6570\u4f53\u672c\u8eab\u7684\u5185\u5bb9</li> <li>\u5e38\u91cf\u4f20\u64ad\uff1a\u5728\u7f16\u8bd1\u65f6\u8ba1\u7b97\u5e38\u91cf\u8868\u8fbe\u5f0f\u7684\u503c\u5e76\u66ff\u6362</li> <li>\u6b7b\u4ee3\u7801\u6d88\u9664\uff1a\u5220\u9664\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u6267\u884c\u5230\u7684\u4ee3\u7801</li> </ul> <p>\u7f16\u8bd1\u6b63\u786e\u6027: \u7cfb\u7edf\u8c03\u7528\u662f\u4f7f\u7a0b\u5e8f\u8ba1\u7b97\u7ed3\u679c\u53ef\u89c1\u7684\u552f\u4e00\u65b9\u6cd5</p> <ul> <li>\u4e0d\u6539\u53d8\u8bed\u4e49 = \u4e0d\u6539\u53d8\u53ef\u89c1\u7ed3\u679c</li> <li>\u72b6\u6001\u673a\u7684\u89c6\u89d2\uff1a\u6ee1\u8db3C/\u6c47\u7f16\u72b6\u6001\u673a\u751f\u6210\u7684\u6240\u6709 syscall \u5e8f\u5217\u5b8c\u5168\u4e00\u81f4\uff0c\u4efb\u4f55\u4f18\u5316\u90fd\u662f\u5141\u8bb8\u7684</li> </ul> <p>C \u4ee3\u7801\u4e2d\u7684\u4e0d\u53ef\u4f18\u5316\u90e8\u5206</p> <ul> <li>External function calls (\u94fe\u63a5\u65f6\u624d\u80fd\u786e\u5b9a\u5230\u5e95\u662f\u4ec0\u4e48\u4ee3\u7801)<ul> <li>\u672a\u77e5\u7684\u4ee3\u7801\u53ef\u80fd\u5305\u542b\u7cfb\u7edf\u8c03\u7528</li> <li>\u56e0\u6b64\u4e0d\u53ef\u5220\u9664\u3001\u79fb\u51fa\u5faa\u73af\u7b49\uff0c\u4e14\u8981\u4fdd\u8bc1\u53c2\u6570\u4f20\u9012\u5b8c\u5168\u4e00\u81f4</li> </ul> </li> <li>\u7f16\u8bd1\u5668\u63d0\u4f9b\u7684 \u201c\u4e0d\u53ef\u4f18\u5316\u201d \u6807\u6ce8<ul> <li>volatile [load | store | inline assembly]</li> </ul> </li> </ul> <p>example\uff1ainline.c C<pre><code>int equals(int x, int y) {\n    if (x == y) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\nint foo(int n) {\n    return equals(n, n) + equals(n, n - 1);\n}\n</code></pre> <code>gcc -O2 -c inline.c &amp;&amp; objdump -d inline.o</code>: \u53ef\u4ee5\u770b\u5230\u7f16\u8bd1\u5668\u76f4\u63a5\u5c061\u8d4b\u503c\u7ed9eax\u5bc4\u5b58\u5668\u4e86\uff0c\u800c\u4e0d\u662f\u8c03\u7528equals\u51fd\u6570\u3002</p> Bash<pre><code>0000000000000010 &lt;foo&gt;:\n10:   f3 0f 1e fa             endbr64 \n14:   b8 01 00 00 00          mov    $0x1,%eax\n19:   c3                      ret\n</code></pre> </li> </ol>"},{"location":"OS/%E7%BB%AA%E8%AE%BA/#lecture-3","title":"Lecture 3 \u786c\u4ef6\u89c6\u89d2\u7684\u64cd\u4f5c\u7cfb\u7edf","text":"<p>Take-away Messages</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf\u662f\u4e25\u683c\u7684\u6570\u5b66\u5bf9\u8c61\uff1a\u6ca1\u6709\u9b54\u6cd5\uff1b\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u4e00\u5207\u884c\u4e3a\u90fd\u662f\u53ef\u89c2\u6d4b\u3001\u53ef\u7406\u89e3\u7684\u3002</p> <ul> <li>\u5904\u7406\u5668\u662f\u65e0\u60c5\u7684\u6267\u884c\u6307\u4ee4\u7684\u673a\u5668\u3002</li> <li>\u5904\u7406\u5668\u4f1a\u89c4\u5b9a\u597d Reset \u540e\u7684\u884c\u4e3a\u3002</li> <li>Reset \u540e Firmware \u5f00\u59cb\u8fd0\u884c\uff0c\u518d\u52a0\u8f7d\u64cd\u4f5c\u7cfb\u7edf\u3002</li> <li>\u5382\u5546\u9010\u6e10\u5f62\u6210\u4e86\u8fbe\u6210\u5171\u8bc6\u7684 Firmware Specification (IBM PC \u201c\u517c\u5bb9\u673a\u201d\u3001UEFI\u3001\u2026\u2026)\u3002</li> </ul> <ol> <li> <p>IBM PC/PC-DOS 2.0 (1983)\u65f6\u4ee3\uff1aFirmware (BIOS) \u4f1a\u52a0\u8f7d\u78c1\u76d8\u7684\u524d 512 \u5b57\u8282\u5230 0x7c00\uff0c\u5982\u679c\u8fd9 512 \u5b57\u8282\u6700\u540e\u662f <code>0x55, 0xAA</code>\uff0c\u5c31\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u7136\u540e\u4ece 0x7c00 \u5f00\u59cb\u6267\u884c\u64cd\u4f5c\u7cfb\u7edf\u4ee3\u7801\u3002 Makefile<pre><code>minimal.img: Makefile\n    ( echo \"eb fe 11 22 33 44\" | xxd -r -p; \\\n      cat /dev/zero | head -c 504; \\\n      echo \"55 aa\" | xxd -r -p \\\n    ) &gt; minimal.img\n</code></pre></p> <p>\u8fd9\u4e2amakefile\u4f1a\u751f\u6210\u4e00\u4e2a512\u5b57\u8282\u7684img\u6587\u4ef6\uff0c\u524d6\u4e2a\u5b57\u8282\u662f<code>eb fe 11 22 33 44</code>\uff0c\u4e2d\u95f4504\u4e2a\u5b57\u8282\u90fd\u662f0\uff0c\u6700\u540e\u4e24\u4e2a\u5b57\u8282\u662f<code>55 aa</code>\u3002\u4f7f\u7528<code>qemu-system-x86_64 -monitor stdio minimal.img</code>\u542f\u52a8\u540e\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u770b\u5230eip\u786e\u5b9e\u662f0x7c00\uff0c\u5f53\u524d\u6307\u4ee4\u4e3a\u6b7b\u5faa\u73af\u3002(eb fe\u5373\u4e3a\u6b7b\u5faa\u73af<code>jmp .</code>)</p> Bash<pre><code>(qemu) p $eip\n0x7c00\n(qemu) x/i $eip\n0x0000000000007c00:  jmp    0x7c00\n</code></pre> <p>\u901a\u8fc7<code>qemu-system-x86_64 -s -S minimal.img &amp;</code>\u548c<code>gdb -x init.gdb</code>\u53ef\u4ee5\u770b\u5230\u662f2\u4e2a\u5b57\u82822\u4e2a\u5b57\u8282\u7684\u5c06\u78c1\u76d8\u5185\u5bb9\u642c\u52300x7c00\u5904\u7684\uff0c\u4f7f\u7528\u7684\u6307\u4ee4\u662f<code>rep insl (%dx),%es:(%edi)\u200b</code> Bash<pre><code># init.gdb\n# Kill process (QEMU) on gdb exits\ndefine hook-quit\n    kill\nend\n\ndefine hook-stop\n    printf \"Program Counter:\\n\"\n    x/i $rip + ($cs * 16)\n    printf \"------- Memory around 0x7c00 -------\\n\"\n    x/16b 0x7c00\nend\n\n# Connect to remote\ntarget remote localhost:1234\nwatch *0x7c00\nbreak *0x7c00\nlayout asm\ncontinue\n</code></pre></p> </li> </ol>"},{"location":"OS/%E7%BB%AA%E8%AE%BA/#lecture-4","title":"Lecture 4 \u6570\u5b66\u89c6\u89d2\u7684\u64cd\u4f5c\u7cfb\u7edf","text":"<p>Take-away Messages</p> <p>\u7a0b\u5e8f\u5c31\u662f\u72b6\u6001\u673a\uff1b\u72b6\u6001\u673a\u53ef\u4ee5\u7528\u7a0b\u5e8f\u8868\u793a\u3002\u56e0\u6b64\uff1a</p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u7528\u66f4 \u201c\u7b80\u5355\u201d \u7684\u65b9\u5f0f (\u4f8b\u5982 Python) \u63cf\u8ff0\u72b6\u6001\u673a\u3001\u5efa\u6a21\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u5e94\u7528\uff0c\u5e76\u4e14\u5b9e\u73b0\u64cd\u4f5c\u7cfb\u7edf\u7684\u53ef\u6267\u884c\u6a21\u578b\u3002</li> <li>\u4e00\u65e6\u628a\u64cd\u4f5c\u7cfb\u7edf\u3001\u5e94\u7528\u7a0b\u5e8f\u5f53\u505a \u201c\u6570\u5b66\u5bf9\u8c61\u201d \u5904\u7406\uff0c\u90a3\u4e48\u6211\u4eec\u56fe\u8bba\u3001\u6570\u7406\u903b\u8f91\u4e2d\u7684\u5de5\u5177\u5c31\u80fd\u88ab\u5e94\u7528\u4e8e\u5904\u7406\u7a0b\u5e8f\u2014\u2014\u4f8b\u5982\uff0c\u53ef\u4ee5\u7528\u56fe\u904d\u5386 \u201c\u66b4\u529b\u679a\u4e3e\u201d \u7684\u65b9\u6cd5\u8bc1\u660e\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u3002</li> </ul> <ol> <li>Debug os-model.py\u8981\u914d\u7f6e\u597d\u7684.vscode/launch.json JSON<pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Python Debugger: Current File\",\n            \"type\": \"debugpy\",\n            \"request\": \"launch\",\n            \"program\": \"${file}\",\n            \"args\": [\"hello.py\"],\n            \"console\": \"integratedTerminal\"\n        }\n    ]\n}\n</code></pre></li> <li> <p>os-model.py: 30\u884c\u5efa\u6a21\u64cd\u4f5c\u7cfb\u7edf Python<pre><code>#!/usr/bin/env python3\n\nimport sys\nimport random\nfrom pathlib import Path\n\nclass OS:\n    '''\n    A minimal executable operating system model. Processes\n    are state machines (Python generators) that can be paused\n    or continued with local states being saved.\n    '''\n\n    '''\n    We implement three system calls:\n\n    - read: read a random bit value.\n    - write: write a string to the buffer.\n    - spawn: create a new state machine (process).\n    '''\n    SYSCALLS = ['read', 'write', 'spawn']\n\n    class Process:\n        '''\n        A \"freezed\" state machine. The state (local variables,\n        program counters, etc.) are stored in the generator\n        object.\n        '''\n\n        def __init__(self, func, *args):\n            # func should be a generator function. Calling\n            # func(*args) returns a generator object.\n            self._func = func(*args)\n\n            # This return value is set by the OS's main loop.\n            self.retval = None\n\n        def step(self):\n            '''\n            Resume the process with OS-written return value,\n            until the next system call is issued.\n            '''\n            syscall, args, *_ = self._func.send(self.retval)\n            self.retval = None\n            return syscall, args\n\n    def __init__(self, src):\n        # This is a hack: we directly execute the source\n        # in the current Python runtime--and main is thus\n        # available for calling.\n        exec(src, globals())\n        self.procs = [OS.Process(main)]\n        self.buffer = ''\n\n    def run(self):\n        # Real operating systems waste all CPU cycles\n        # (efficiently, by putting the CPU into sleep) when\n        # there is no running process at the moment. Our model\n        # terminates if there is nothing to run.\n        while self.procs:\n\n            # There is also a pointer to the \"current\" process\n            # in today's operating systems.\n            current = random.choice(self.procs)\n\n            try:\n                # Operating systems handle interrupt and system\n                # calls, and \"assign\" CPU to a process.\n                match current.step():\n                    case 'read', _:\n                        current.retval = random.choice([0, 1])\n                    case 'write', s:\n                        self.buffer += s\n                    case 'spawn', (fn, *args):\n                        self.procs += [OS.Process(fn, *args)]\n                    case _:\n                        assert 0\n\n            except StopIteration:\n                # The generator object terminates.\n                self.procs.remove(current)\n\n        return self.buffer\n\nif __name__ == '__main__':\n    if len(sys.argv) &lt; 2:\n        print(f'Usage: {sys.argv[0]} file')\n        exit(1)\n\n    src = Path(sys.argv[1]).read_text()\n\n    # Hack: patch sys_read(...) -&gt; yield \"sys_read\", (...)\n    for syscall in OS.SYSCALLS:\n        src = src.replace(f'sys_{syscall}',\n                          f'yield \"{syscall}\", ')\n\n    stdout = OS(src).run()\n    print(stdout)\n</code></pre></p> </li> <li> <p>Mosaic Model and Checker:      Python<pre><code>def main():\n    pid = sys_fork()\n    sys_sched()  # non-deterministic context switch\n    if pid == 0:\n        sys_write('World\\n')\n    else:\n        sys_write('Hello\\n')\n</code></pre> <code>python mosaic.py -c examples/intro/hello.py | grep stdout | sort | uniq</code>\u8f93\u51fa\uff1a(-c checking\u6a21\u5f0f\u4e0b\uff0c\u4f1a\u8f93\u51fa\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u679c)     Bash<pre><code>\"stdout\": \"\",\n\"stdout\": \"Hello\\n\",\n\"stdout\": \"Hello\\nWorld\\n\",\n\"stdout\": \"World\\n\",\n\"stdout\": \"World\\nHello\\n\",\n</code></pre></p> </li> </ol>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/","title":"\u865a\u62df\u5316","text":"<p> \u7ea6 471 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/#_2","title":"\u8d44\u6599","text":"<ul> <li>Yanyan's wiki</li> <li>\u8bfe\u7a0b\u7f51\u7ad9</li> <li>video</li> </ul>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/#_3","title":"\u64cd\u4f5c\u7cfb\u7edf\u662f\u4ec0\u4e48","text":"<ol> <li>\u5728\u5e94\u7528\u7a0b\u5e8f\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = \u5bf9\u8c61 + API\u3002\u4ece\u5e94\u7528\u7a0b\u5e8f\u7684\u89c6\u89d2\u770b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7684\u5bf9\u8c61 (\u8fdb\u7a0b/\u7ebf\u7a0b\u3001\u5730\u5740\u7a7a\u95f4\u3001\u6587\u4ef6\u3001\u8bbe\u5907\u2026\u2026) \u548c\u64cd\u7eb5\u5b83\u4eec\u7684 API (\u7cfb\u7edf\u8c03\u7528)\u3002</li> <li>\u5728\u786c\u4ef6\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = C \u7a0b\u5e8f\u3002\u4ece\u786c\u4ef6\u7684\u89c6\u89d2\u770b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u662f\u4e00\u4e2a\u62e5\u6709\u8bbf\u95ee\u5168\u90e8\u786c\u4ef6\u529f\u80fd\u7684\u7a0b\u5e8f\u3002\u786c\u4ef6\u4f1a\u5e2e\u52a9\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210\u6700\u521d\u7684\u521d\u59cb\u5316\u548c\u52a0\u8f7d\uff0c\u4e4b\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u52a0\u8f7d\u5b8c\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u540e\uff0c\u4ece\u6b64\u4f5c\u4e3a \u201c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u201d \u5728\u540e\u53f0\u7ba1\u7406\u6574\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u3002</li> <li>\u5728\u4e0a\u5e1d\u773c\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf = \u4e00\u4e2a\u6570\u5b66\u5bf9\u8c61\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8ba1\u7b97\u673a\u7cfb\u7edf (\u7535\u8def) \u5efa\u6a21\u6210\u6709\u9650\u72b6\u6001\u673a\u6a21\u578b\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u628a\u8fd0\u884c\u5728\u786c\u4ef6\u4e0a\u7684\u4efb\u4f55\u8f6f\u4ef6 (\u5305\u62ec\u64cd\u4f5c\u7cfb\u7edf) \u5efa\u6a21\u6210\u72b6\u6001\u673a\u3002</li> </ol> <p>Operating System concept</p> <p>Operating System: A body of software, in fact, that is responsible for making it easy to run programs (even allowing you to seemingly run many at the same time), allowing programs to share memory, enabling programs to interact with devices, and other fun stuff like that. (OSTEP)</p>"},{"location":"OS/%E8%99%9A%E6%8B%9F%E5%8C%96/#lecture-1","title":"Lecture 1 \u64cd\u4f5c\u7cfb\u7edf\u6982\u8ff0","text":"<ol> <li>\u65f6\u949f\u3001\u5bfc\u7ebf\u3001\u903b\u8f91\u95e8(NAND\uff0c\u5373\u4e0e\u975e\u95e8)\u3001\u5bc4\u5b58\u5668\u662f\u6570\u5b57\u7cfb\u7edf\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\uff1a\u6570\u5b57\u7cfb\u7edf\u5728\u65f6\u949f\u9a71\u52a8\u4e0b\u79bb\u6563\u5730\u66f4\u65b0\u4e0b\u4e00\u5468\u671f\u7684\u5bc4\u5b58\u5668\u72b6\u6001\u3002</li> <li>\u6570\u5b57\u7535\u8def\u6a21\u62df\u5668\uff0c\u7f16\u8bd1\uff1a<code>gcc -o logisim -I. logisim.c</code>, \u5176\u4e2d<code>-I.</code>\u6307\u5b9a\u5f53\u524d\u76ee\u5f55\uff08<code>.</code>\uff09\u4e3a\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84\uff0c\u8fd9\u610f\u5473\u7740\u7f16\u8bd1\u5668\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627e\u5934\u6587\u4ef6\u3002\u8fd0\u884c\uff1a<code>./logisim</code>\uff0c\u53ef\u89c6\u5316\u8fd0\u884c: <code>make run</code>\u6216<code>./logisim | python seg-display.py</code>\u3002\u5355\u72ec\u8fd0\u884c<code>python seg-display.py</code>\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u7b49\u7740\u8f93\u5165\uff0c\u6b64\u65f6\u8f93\u5165<code>A=1</code>\u5373\u53ef\u70b9\u4eae\u6570\u7801\u7ba1\u3002</li> <li>RISC-V \u5904\u7406\u5668\u6a21\u62df\u5668\uff0c\u7f16\u8bd1\uff1a<code>gcc -g -o mini-rv32ima main.c</code>\u6216<code>make</code>\uff0c\u8fd0\u884c\uff1a<code>./mini-rv32ima bin/fib.rv32i-bin 10</code>\uff0c\u7ed3\u679c\u5b58\u5728a0\u5bc4\u5b58\u5668\u3002</li> </ol>"},{"location":"Tool/tool/","title":"Tool","text":"<p> \u7ea6 1668 \u4e2a\u5b57  35 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p>"},{"location":"Tool/tool/#gcc","title":"gcc","text":"<ul> <li><code>-c</code>: \u53ea\u7f16\u8bd1\u4e0d\u94fe\u63a5\u3002 \u5b83\u544a\u8bc9\u7f16\u8bd1\u5668\u7f16\u8bd1\u6e90\u4ee3\u7801\u6587\u4ef6\uff0c\u4f46\u4e0d\u8fdb\u884c\u94fe\u63a5\u64cd\u4f5c\u3002\u5f53\u4f7f\u7528\u8fd9\u4e2a\u9009\u9879\u65f6\uff0cGCC \u4f1a\u5c06\u6bcf\u4e2a\u6307\u5b9a\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u7f16\u8bd1\u6210\u4e00\u4e2a\u5bf9\u5e94\u7684\u76ee\u6807\u6587\u4ef6\uff08\u901a\u5e38\u662f .o \u6587\u4ef6\uff09\uff0c\u800c\u4e0d\u662f\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002\u76ee\u6807\u6587\u4ef6\u5305\u542b\u4e86\u7f16\u8bd1\u540e\u7684\u673a\u5668\u4ee3\u7801\uff0c\u8fd9\u4e9b\u4ee3\u7801\u53ef\u4ee5\u7a0d\u540e\u88ab\u94fe\u63a5\u5668\uff08\u901a\u5e38\u662f ld\uff09\u7528\u6765\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u6216\u5e93\u6587\u4ef6\u3002</li> <li><code>-I.</code>: \u6307\u5b9a\u5f53\u524d\u76ee\u5f55\uff08<code>.</code>\uff09\u4e3a\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84\uff0c\u8fd9\u610f\u5473\u7740\u7f16\u8bd1\u5668\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627e\u5934\u6587\u4ef6\u3002</li> <li><code>-g</code>\uff1a\u751f\u6210\u8c03\u8bd5\u4fe1\u606f\u3002\u8fd9\u544a\u8bc9\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u751f\u6210\u8c03\u8bd5\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u4ee5\u88ab\u8c03\u8bd5\u5668\uff08\u5982 GDB\uff09\u4f7f\u7528\uff0c\u4ee5\u4fbf\u5728\u8c03\u8bd5\u7a0b\u5e8f\u65f6\u63d0\u4f9b\u66f4\u591a\u7684\u5e2e\u52a9\u3002\u53ea\u6709\u8fd9\u6837gdb\u624d\u80fd\u8c03\u8bd5\u65f6\u770b\u5230\u4ee3\u7801\u3002</li> <li><code>--verbose</code>: \u67e5\u770b\u6240\u6709\u7f16\u8bd1\u9009\u9879\u3002\u8fd9\u4f1a\u4f7f\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u8f93\u51fa\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6b65\u9aa4\u3002</li> <li><code>-Wl,--verbose</code>: \u67e5\u770b\u6240\u6709\u94fe\u63a5\u9009\u9879\u3002</li> <li><code>-S</code>: \u8868\u793a\u7f16\u8bd1\u5230\u6c47\u7f16\u4ee3\u7801\u9636\u6bb5\uff0c\u5373\u751f\u6210 <code>.s</code> \u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002<code>.S</code>\u6587\u4ef6\uff1a\u5728\u7f16\u8bd1\u4e4b\u524d\uff0c\u4f1a\u7ecf\u8fc7C\u9884\u5904\u7406\u5668\uff08cpp\uff09\u7684\u5904\u7406\u3002\u8fd9\u610f\u5473\u7740<code>.S</code>\u6587\u4ef6\u53ef\u4ee5\u5305\u542bC\u9884\u5904\u7406\u6307\u4ee4\uff0c\u5982\u5b8f\u5b9a\u4e49\u3001\u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4<code>#ifdef</code>\u3001<code>#ifndef</code>\u3001<code>#endif</code>\u7b49\uff0c\u4ee5\u53ca<code>#include</code>\u6307\u4ee4\u6765\u5305\u542b\u5176\u4ed6\u6587\u4ef6\u3002\u9884\u5904\u7406\u5668\u4f1a\u6839\u636e\u8fd9\u4e9b\u6307\u4ee4\u5bf9\u6587\u4ef6\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u5c06\u5904\u7406\u540e\u7684\u6587\u4ef6\u4ea4\u7ed9\u7f16\u8bd1\u5668\u8fdb\u884c\u7f16\u8bd1\u3002<code>.s</code>\u6587\u4ef6\uff1a\u4e0d\u4f1a\u7ecf\u8fc7C\u9884\u5904\u7406\u5668\u7684\u5904\u7406\uff0c\u76f4\u63a5\u88ab\u7f16\u8bd1\u5668\u7f16\u8bd1\u3002\u56e0\u6b64\uff0c<code>.s</code>\u6587\u4ef6\u4e2d\u4e0d\u80fd\u5305\u542bC\u9884\u5904\u7406\u6307\u4ee4\uff0c\u53ea\u80fd\u5305\u542b\u6c47\u7f16\u4ee3\u7801\u3002</li> <li><code>-Wall</code>: \u542f\u7528\u6240\u6709\u7684\u8b66\u544a\u4fe1\u606f\u3002</li> <li><code>-Os</code>: \u4f18\u5316\u4ee3\u7801\u5927\u5c0f\u3002\u5728\u4e0d\u663e\u8457\u5f71\u54cd\u7a0b\u5e8f\u6027\u80fd\u7684\u524d\u63d0\u4e0b\uff0c\u5c3d\u53ef\u80fd\u5730\u51cf\u5c11\u4ee3\u7801\u7684\u5927\u5c0f\u3002</li> <li><code>-s</code>: \u53bb\u9664\u7b26\u53f7\u8868\u548c\u8c03\u8bd5\u4fe1\u606f\uff0c\u8fd9\u4e5f\u6709\u52a9\u4e8e\u51cf\u5c0f\u6700\u7ec8\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5927\u5c0f</li> <li><code>-DSTANDALONE</code>: <code>-D</code> \u9009\u9879\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a <code>STANDALONE</code>\u7684\u5b8f\uff0c\u8fd9\u4e2a\u5b8f\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u88ab\u7528\u6765\u63a7\u5236\u4e0d\u540c\u7684\u7f16\u8bd1\u8def\u5f84\u6216\u884c\u4e3a\u3002</li> </ul>"},{"location":"Tool/tool/#objdump","title":"objdump","text":"<ul> <li><code>-d</code>: \u53cd\u6c47\u7f16\u3002 \u5b83\u544a\u8bc9 objdump \u663e\u793a\u6bcf\u4e2a\u76ee\u6807\u6587\u4ef6\u6216\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u548c\u6570\u636e\u7684\u53cd\u6c47\u7f16\u3002</li> </ul>"},{"location":"Tool/tool/#readelf","title":"readelf","text":"<ul> <li>ELF (Executable and Linkable Format)\u662f\u4e00\u79cd\u7528\u4e8e\u53ef\u6267\u884c\u6587\u4ef6\u3001\u76ee\u6807\u6587\u4ef6\u548c\u5171\u4eab\u5e93\u7684\u6807\u51c6\u6587\u4ef6\u683c\u5f0f\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u7c7b Unix \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u3002</li> <li><code>-a</code>: all\uff0c\u663e\u793aELF\u6587\u4ef6\u7684\u6240\u6709\u8282\uff08section\uff09\u548c\u6bb5\uff08segment\uff09\u7684\u4fe1\u606f\uff0c\u4ee5\u53ca\u7b26\u53f7\u8868\u3001\u5b57\u7b26\u4e32\u8868\u3001\u91cd\u5b9a\u4f4d\u4fe1\u606f\u7b49\u3002</li> </ul>"},{"location":"Tool/tool/#gdb","title":"gdb","text":"<ul> <li><code>starti</code>: \u5f00\u59cb\u6267\u884c\u7a0b\u5e8f\uff0c\u5e76\u5728\u6267\u884c\u7b2c\u4e00\u6761\u6307\u4ee4\u4e4b\u524d\u505c\u6b62\u3002\u8fd9\u4e2a\u547d\u4ee4\u901a\u5e38\u7528\u4e8e\u5728\u7a0b\u5e8f\u5f00\u59cb\u65f6\u8bbe\u7f6e\u65ad\u70b9\uff0c\u4ee5\u4fbf\u68c0\u67e5\u7a0b\u5e8f\u7684\u521d\u59cb\u72b6\u6001\u3002</li> <li><code>layout asm</code>: \u5207\u6362\u5230\u6c47\u7f16\u4ee3\u7801\u5e03\u5c40\u6a21\u5f0f</li> <li><code>si</code>: \u5355\u6b65\u6267\u884c\u4e00\u6761\u6c47\u7f16\u6307\u4ee4\u3002</li> <li><code>p $rsp</code>: \u6253\u5370\u5bc4\u5b58\u5668 <code>rsp</code> \u7684\u5f53\u524d\u503c\uff0c\u4e5f\u5c31\u662f\u663e\u793a\u6808\u6307\u9488\u7684\u503c\uff08\u4e00\u4e2a\u5730\u5740\uff0c\u8868\u793a\u6808\u9876\u7684\u5185\u5b58\u5730\u5740\uff09\u3002\u4f8b\u5b50\u8f93\u51fa<code>$1 = (void *) 0x7fffffffdcb0</code></li> <li><code>x/x $rsp</code>: \u4ee5\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u68c0\u67e5\u5185\u5b58\u5730\u5740 <code>$rsp</code> \u5904\u7684\u503c\u3002x \u547d\u4ee4\u662fGDB\u4e2d\u7684\u4e00\u4e2a\u68c0\u67e5\u5185\u5b58\u7684\u547d\u4ee4\uff0c/x \u8868\u793a\u4ee5\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u663e\u793a\uff0c$rsp \u662f\u5bc4\u5b58\u5668 <code>rsp</code> \u7684\u5f53\u524d\u503c\uff0c\u5b83\u6307\u5411\u6808\u9876\u3002\u4f8b\u5b50\u8f93\u51fa<code>0x7fffffffdcb0: 0x00000001</code>\uff0c\u8fd9\u4e2a<code>M[rsp]</code>\u662f1\u663e\u7136\u975e\u6cd5\uff0c\u8fdb\u800c\u5bfc\u81f4segmentation fault\u3002</li> <li><code>x/i $eip</code>: <code>/i</code>\u8fd9\u662f x \u547d\u4ee4\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u8868\u793a\u4ee5\u6307\u4ee4\u7684\u5f62\u5f0f\u663e\u793a\u5185\u5b58\u5185\u5bb9\u3002\u8f93\u51fa<code>0x0000000000007c00:  jmp    0x7c00</code></li> <li><code>x/16b 0x7c00</code>: \u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u4ece\u5185\u5b58\u5730\u5740 0x7c00 \u5f00\u59cb\uff0c\u663e\u793a 16 \u4e2a\u5b57\u8282\u7684\u5185\u5bb9\u3002</li> <li><code>tui disable</code>: \u7981\u7528 TUI\uff08Text User Interface\uff0c\u6587\u672c\u7528\u6237\u754c\u9762\uff09\u6a21\u5f0f\uff0c\u4f7f GDB \u6062\u590d\u5230\u9ed8\u8ba4\u7684\u547d\u4ee4\u884c\u754c\u9762\u3002</li> <li><code>info registers</code>: \u663e\u793a\u5f53\u524d\u6240\u6709\u5bc4\u5b58\u5668\u7684\u503c\u3002</li> <li><code>info registers eflag</code>: \u663e\u793a\u5f53\u524d eflag \u5bc4\u5b58\u5668\u7684\u503c\u3002</li> <li><code>start</code>: \u5f00\u59cb\u8c03\u8bd5\u3002</li> <li><code>s</code>: \u5355\u6b65\u6267\u884c\u3002</li> <li><code>-x</code>: \u6307\u5b9a\u4e00\u4e2a\u5305\u542bGDB\u547d\u4ee4\u7684\u811a\u672c\u6587\u4ef6\uff0c\u4ee5\u4fbf\u5728\u542f\u52a8GDB\u65f6\u81ea\u52a8\u6267\u884c\u8fd9\u4e9b\u547d\u4ee4\u3002\u4f8b\u5982<code>gdb -x init.gdb</code> or <code>gdb -x debug.py</code></li> </ul>"},{"location":"Tool/tool/#strace","title":"strace","text":"<ul> <li>strace: system call trace</li> <li><code>-f</code>: \u8ddf\u8e2a\u6240\u6709\u5b50\u8fdb\u7a0b\uff0c\u5373\u5982\u679c\u7a0b\u5e8f\u521b\u5efa\u4e86\u5b50\u8fdb\u7a0b\uff0cstrace \u4e5f\u4f1a\u8ddf\u8e2a\u8fd9\u4e9b\u5b50\u8fdb\u7a0b\u7684\u7cfb\u7edf\u8c03\u7528\u3002</li> </ul>"},{"location":"Tool/tool/#vim","title":"vim","text":"<ul> <li><code>%</code>\uff1a\u5728 Vim \u4e2d\uff0c<code>%</code>\u7b26\u53f7\u8868\u793a\u5f53\u524d\u6587\u4ef6\u540d\u3002\u6240\u4ee5\uff0c<code>%!grep -v -e open</code> \u5b9e\u9645\u4e0a\u662f\u5728\u5bf9\u5f53\u524d\u6587\u4ef6\u6267\u884c grep \u547d\u4ee4\u3002</li> <li><code>!</code>: \u7528\u4e8e\u5728 Vim \u4e2d\u6267\u884c\u5916\u90e8\u547d\u4ee4\u3002\u5b83\u544a\u8bc9 Vim \u63a5\u4e0b\u6765\u7684\u90e8\u5206\u662f\u4e00\u4e2a\u5916\u90e8\u547d\u4ee4\uff0c\u800c\u4e0d\u662f Vim \u5185\u90e8\u547d\u4ee4\u3002</li> <li><code>grep -v</code>: <code>-v</code>\u8868\u793a\u53cd\u5411\u5339\u914d\uff0c\u5373\u8f93\u51fa\u4e0d\u5305\u542b\u5339\u914d\u6a21\u5f0f\u7684\u884c\u3002</li> <li><code>grep -e</code>: <code>-e</code>\u6307\u5b9a\u8981\u641c\u7d22\u7684pattern\u3002</li> <li><code>%!grep -v -e open</code>: \u5728\u5f53\u524d\u6587\u4ef6\u4e2d\u641c\u7d22\u4e0d\u5305\u542b \"open\" \u5b57\u7b26\u4e32\u7684\u884c\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</li> </ul>"},{"location":"Tool/tool/#make","title":"make","text":"<ul> <li><code>-nB</code>: \u5b83\u7684\u4f5c\u7528\u662f\u6267\u884c Makefile \u4e2d\u7684\u89c4\u5219\uff0c\u4f46\u4e0d\u5b9e\u9645\u6267\u884c\u4efb\u4f55\u547d\u4ee4\uff0c\u800c\u662f\u6253\u5370\u51fa\u5982\u679c\u6267\u884c\u8fd9\u4e9b\u547d\u4ee4\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002<code>-n</code> \u9009\u9879\u8868\u793a\u201c\u5e72\u8fd0\u884c\u201d\uff0c\u5373\u53ea\u663e\u793a\u547d\u4ee4\u800c\u4e0d\u6267\u884c\u5b83\u4eec\uff0c\u800c <code>-B</code> \u9009\u9879\u5219\u8868\u793a\u201c\u5f3a\u5236\u91cd\u65b0\u751f\u6210\u6240\u6709\u76ee\u6807\u201d\uff0c\u5373\u4f7f\u5b83\u4eec\u5df2\u7ecf\u662f\u6700\u65b0\u7684\u3002</li> <li><code>.PHONY: run clean</code>: \u8fd9\u662f Makefile \u4e2d\u7684\u89c4\u5219\uff0c\u7528\u4e8e\u5b9a\u4e49\u4f2a\u76ee\u6807 <code>run</code> \u548c <code>clean</code>\u3002\u4f2a\u76ee\u6807\u4e0d\u662f\u5b9e\u9645\u7684\u6587\u4ef6\uff0c\u800c\u662f\u4e00\u4e2a\u6807\u7b7e\uff0c\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u52a8\u4f5c\u3002\u5728 Makefile \u4e2d\uff0c\u4f2a\u76ee\u6807\u901a\u5e38\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e9b\u4e0d\u4f9d\u8d56\u4e8e\u6587\u4ef6\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u7f16\u8bd1\u3001\u8fd0\u884c\u548c\u6e05\u7406\u3002</li> <li><code>$@</code>: \u662f\u4e00\u4e2a\u81ea\u52a8\u53d8\u91cf\uff0c\u8868\u793a\u76ee\u6807\u6587\u4ef6\u7684\u540d\u79f0\u3002</li> <li><code>$&lt;</code>: \u8fd9\u4e2a\u81ea\u52a8\u53d8\u91cf\u8868\u793a\u7b2c\u4e00\u4e2a\u4f9d\u8d56\u6587\u4ef6\u7684\u540d\u79f0\u3002</li> <li><code>$^</code>: \u8fd9\u4e2a\u81ea\u52a8\u53d8\u91cf\u8868\u793a\u6240\u6709\u4f9d\u8d56\u6587\u4ef6\u7684\u540d\u79f0\uff0c\u4ee5\u7a7a\u683c\u5206\u9694\u3002</li> <li><code>NAME := hello</code>: \u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf NAME\uff0c\u5176\u503c\u4e3a hello</li> <li> <p>example: \u8bb0\u5f55\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5e76\u5c06\u8fd9\u4e9b\u4fe1\u606f\u4fdd\u5b58\u5230\u4e00\u4e2a\u540d\u4e3a compile.log \u7684\u6587\u4ef6\u4e2d\u3002</p> <ul> <li><code>grep</code> \u547d\u4ee4\u7528\u4e8e\u8fc7\u6ee4\u8f93\u51fa\uff0c\u53ea\u4fdd\u7559\u4e0d\u5305\u542b\u4ee5 <code>#</code>\u3001<code>echo</code>\u3001<code>mkdir</code> \u6216 <code>make</code> \u5f00\u5934\u7684\u884c\u3002</li> <li><code>sed</code> \u547d\u4ee4\u7528\u4e8e\u6587\u672c\u66ff\u6362\u3002\u8fd9\u91cc\u7684\u66ff\u6362\u89c4\u5219\u662f\u5c06\u73af\u5883\u53d8\u91cf <code>AM_HOME</code> \u66ff\u6362\u4e3a\u7a7a\u5b57\u7b26\u4e32 <code>\\AM</code>\u3002<code>g</code> \u8868\u793a\u5168\u5c40\u66ff\u6362\uff0c\u5373\u66ff\u6362\u6240\u6709\u5339\u914d\u7684\u5b57\u7b26\u4e32\u3002\u63a5\u7740\u7ee7\u7eed\u5c06\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 <code>$(PWD)</code> \u66ff\u6362\u4e3a <code>.</code></li> </ul> Bash<pre><code>make -nB \\\n      | grep -ve '^\\(\\#\\|echo\\|mkdir\\|make\\)' \\\n      | sed \"s#$(AM_HOME)#\\AM#g\" \\\n      | sed \"s#$(PWD)#.#g\" \\\n      &gt; compile.log\n</code></pre> </li> </ul>"},{"location":"Tool/tool/#qemu-system-x86_64","title":"qemu-system-x86_64","text":"<ul> <li><code>qemu-system-x86_64 -monitor stdio minimal.img</code>: \u542f\u52a8 QEMU \u6a21\u62df\u5668\u5e76\u52a0\u8f7d\u4e00\u4e2a\u540d\u4e3a minimal.img \u7684\u78c1\u76d8\u955c\u50cf\u6587\u4ef6\u3002\u8fd9\u4e2a\u6307\u4ee4\u7684\u4f5c\u7528\u662f\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u7684 x86_64 \u67b6\u6784\u7684\u8ba1\u7b97\u673a\u73af\u5883\uff0c\u5e76\u4e14\u901a\u8fc7\u6807\u51c6\u8f93\u5165\u8f93\u51fa\uff08stdio\uff09\u6765\u4e0e QEMU \u76d1\u89c6\u5668\u8fdb\u884c\u4ea4\u4e92(<code>-monitor stdio</code>)\u3002</li> <li><code>-s</code>: \u8868\u793a\u542f\u7528GDB\u8c03\u8bd5\u670d\u52a1\u5668\uff0c\u5141\u8bb8\u8fdc\u7a0bGDB\u8c03\u8bd5\u5668\u8fde\u63a5\u5230QEMU\u5b9e\u4f8b\u3002</li> <li><code>-S</code>: \u8868\u793a\u5728\u542f\u52a8\u65f6\u51bb\u7ed3CPU\uff0c\u7b49\u5f85\u8fdc\u7a0bGDB\u8c03\u8bd5\u5668\u8fde\u63a5\u540e\u518d\u7ee7\u7eed\u6267\u884c\u3002</li> </ul>"},{"location":"Tool/tool/#example","title":"example","text":"<ol> <li> <p>hello.c C<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    printf(\"Hello World\\n\");\n}\n</code></pre> Bash<pre><code>linux$ gcc a.c                    # this generate a.out\nlinux$ ./a.out \nHello World\nlinux$ hexdump a.out | less\nlinux$ gcc -c a.c                 # this generate a.o\nlinux$ objdump -d a.o             # disassemble\n\na.o:     file format elf64-x86-64\n\n\nDisassembly of section .text:\n\n0000000000000000 &lt;main&gt;:\n   0:   f3 0f 1e fa             endbr64 \n   4:   55                      push   %rbp\n   5:   48 89 e5                mov    %rsp,%rbp\n   8:   48 8d 05 00 00 00 00    lea    0x0(%rip),%rax        # f &lt;main+0xf&gt;\n   f:   48 89 c7                mov    %rax,%rdi\n  12:   e8 00 00 00 00          call   17 &lt;main+0x17&gt;\n  17:   b8 00 00 00 00          mov    $0x0,%eax\n  1c:   5d                      pop    %rbp\n  1d:   c3                      ret    \n</code></pre></p> </li> <li> Bash<pre><code>gcc -g -S minimal.S &gt; minimal.s  # \u4f7f\u7528 GCC \u7f16\u8bd1\u5668\u5c06\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6 minimal.S \u7f16\u8bd1\u6210\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6 minimal.s\uff0c\u5e76\u4e14\u751f\u6210\u8c03\u8bd5\u4fe1\u606f\u3002\nas minimal.s -o minimal.o        # \u4f7f\u7528 as \u6c47\u7f16\u5668\u5c06\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6 minimal.s \u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6 minimal.o\nld -o minimal minimal.o          # \u4f7f\u7528 ld \u94fe\u63a5\u5668\u5c06\u76ee\u6807\u6587\u4ef6 minimal.o \u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6 minimal\n</code></pre> </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/C/C/","title":"Welcome to MkDocs","text":"<p> \u7ea6 54 \u4e2a\u5b57 </p> <p>For full documentation visit mkdocs.org.</p>"},{"location":"%E8%AF%AD%E8%A8%80/C/C/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"%E8%AF%AD%E8%A8%80/C/C/#project-layout","title":"Project layout","text":"Text Only<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Cpp/Cpp_primer/","title":"C++ primer 5th edition","text":"<p> \u7ea6 608 \u4e2a\u5b57  1 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p>"},{"location":"%E8%AF%AD%E8%A8%80/Cpp/Cpp_primer/#ch1","title":"Ch1 \u5f00\u59cb","text":"<ol> <li> <p><code>iostream</code> - \u6807\u51c6\u8f93\u5165\u8f93\u51fa\u6d41\u3002</p> \u57fa\u7840\u7c7b\u578b \u5bf9\u8c61 istream cin - \u6807\u51c6\u8f93\u5165 ostream cout - \u6807\u51c6\u8f93\u51fa\uff0ccerr - \u6807\u51c6\u9519\u8bef\uff0cclog cout &lt;&lt; \"hello\" &lt;&lt; endl; cin &gt;&gt; v1 &gt;&gt; v2; &lt;&lt;\u662f\u8f93\u51fa\u8fd0\u7b97\u7b26\uff0c\u5176\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\uff1aostream\u5bf9\u8c61\uff0c\u53f3\u4fa7\u8fd0\u7b97\u5bf9\u8c61\uff1a\u8981\u6253\u5370\u7684\u5185\u5bb9\uff0c\u8fd4\u56de\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u3002\u53f3\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u7684\u503c\u5199\u5230\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u8868\u793a\u7684\u8f93\u51fa\u6d41 &gt;&gt;\u662f\u8f93\u5165\u8fd0\u7b97\u7b26\uff0c\u5176\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\uff1aistream\u5bf9\u8c61\uff0c\u53f3\u4fa7\uff1a\u8981\u8f93\u5165\u7684\u5185\u5bb9\uff0c\u8fd4\u56de\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u3002\u4ece\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u6240\u6307\u5b9a\u7684\u8f93\u5165\u6d41\u8bfb\u53d6\u6570\u636e\uff0c\u5b58\u5165\u53f3\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u4e2d <p>C++<pre><code>while (std::cin &gt;&gt; value)\n</code></pre> \u6b64\u8868\u8fbe\u5f0f\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u6570\uff0c\u4fdd\u5b58\u5728value\u4e2d\u3002\u8f93\u5165\u8fd0\u7b97\u7b26\uff08\u53c2\u89c11.2\u8282\uff0c\u7b2c7\u9875\uff09\u8fd4\u56de\u5176\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\uff0c\u5728\u672c\u4f8b\u4e2d\u662fstd::cin\u3002\u56e0\u6b64\uff0c\u6b64\u5faa\u73af\u6761\u4ef6\u5b9e\u9645\u4e0a\u68c0\u6d4b\u7684\u662fstd::cin\u3002</p> <p>\u5f53\u6211\u4eec\u4f7f\u7528\u4e00\u4e2aistream\u5bf9\u8c61\u4f5c\u4e3a\u6761\u4ef6\u65f6\uff0c\u5176\u6548\u679c\u662f\u68c0\u6d4b\u6d41\u7684\u72b6\u6001\u3002\u5982\u679c\u6d41\u662f\u6709\u6548\u7684\uff0c\u5373\u6d41\u672a\u9047\u5230\u9519\u8bef\uff0c\u90a3\u4e48\u68c0\u6d4b\u6210\u529f\u3002\u5f53\u9047\u5230\u6587\u4ef6\u7ed3\u675f\u7b26\uff08end-of-file\uff09\uff0c\u6216\u9047\u5230\u4e00\u4e2a\u65e0\u6548\u8f93\u5165\u65f6\uff08\u4f8b\u5982\u8bfb\u5165\u7684\u503c\u4e0d\u662f\u4e00\u4e2a\u6574\u6570\uff09\uff0cistream\u5bf9\u8c61\u7684\u72b6\u6001\u4f1a\u53d8\u4e3a\u65e0\u6548\u3002\u5904\u4e8e\u65e0\u6548\u72b6\u6001\u7684istream\u5bf9\u8c61\u4f1a\u4f7f\u6761\u4ef6\u53d8\u4e3a\u5047\u3002</p> </li> <li> <p>\u6ce8\u91ca\u754c\u5b9a\u7b26\u4e0d\u80fd\u5d4c\u5957\uff1a<code>/*.../*..*/...*/</code> \u662f\u9519\u8bef\u7684</p> </li> <li>\u5934\u6587\u4ef6\uff1a\u4f7f\u7c7b\u6216\u5176\u4ed6\u540d\u5b57\u7684\u5b9a\u4e49\u53ef\u88ab\u591a\u4e2a\u7a0b\u5e8f\u4f7f\u7528\u7684\u4e00\u79cd\u673a\u5236</li> <li>C++\uff1a\u9759\u6001\u6570\u636e\u7c7b\u578b\u8bed\u8a00\uff0c\u5b83\u7684\u7c7b\u578b\u68c0\u67e5\u53d1\u751f\u5728\u7f16\u8bd1\u65f6\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u5fc5\u987b\u77e5\u9053\u7a0b\u5e8f\u4e2d\u6bcf\u4e00\u4e2a\u53d8\u91cf\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b</li> <li> <p>C++\u6807\u51c6\u89c4\u5b9a\u7684\u7b97\u672f\u7c7b\u578b\u5c3a\u5bf8\u7684\u6700\u5c0f\u503c\uff1aint\u6700\u5c0f\u536016\u4f4d\uff0c\u4f46\u6211\u4eec\u7528\u7684\u4e00\u822c\u662f\u536032\u4f4d\u7684int</p> \u7c7b\u578b \u542b\u4e49 \u6700\u5c0f\u5c3a\u5bf8 bool \u5e03\u5c14\u7c7b\u578b \u672a\u5b9a\u4e49 char \u5b57\u7b26 8 \u4f4d wchar_t \u5bbd\u5b57\u7b26 16 \u4f4d char16_t Unicode \u5b57\u7b26 16 \u4f4d char32_t Unicode \u5b57\u7b26 32 \u4f4d short \u77ed\u6574\u578b 16 \u4f4d int \u6574\u578b 16 \u4f4d long \u957f\u6574\u578b 32 \u4f4d long long \u957f\u6574\u578b 64 \u4f4d float \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 6 \u4f4d\u6709\u6548\u6570\u5b57 double \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570 6 \u4f4d\u6709\u6548\u6570\u5b57 long double \u6269\u5c55\u7cbe\u5ea6\u6d6e\u70b9\u6570 10\u4f4d\u6709\u6548\u6570\u5b57 </li> <li> <p>\u5b57\u8282\uff1a\u53ef\u5bfb\u5740\u7684\u6700\u5c0f\u5185\u5b58\u5757\u300232\u4f4d\u673a\u5668\u4e0a\u4e00\u4e2a\u5b57\u4e3a4\u4e2a\u5b57\u8282\uff1a</p> \u5730\u5740 \u6bcf\u4e2a\u5b57\u8282\u5177\u4f53\u5185\u5bb9 736424 00111011 736425 00011011 736426 01110001 736427 01100100 <p>\u5b57\u957f</p> <p>\u5b57\u957f\uff08\u4e5f\u79f0\u4e3a\u673a\u5668\u5b57\u957f\u6216\u5904\u7406\u5668\u5b57\u957f\uff09\u662f\u6307\u8ba1\u7b97\u673a\u5904\u7406\u5668\u4e00\u6b21\u6027\u80fd\u591f\u5904\u7406\u7684\u6570\u636e\u4f4d\u6570\u3002\u73b0\u4ee3 32 \u4f4d\u5904\u7406\u5668\u610f\u5473\u7740\u5b83\u4eec\u53ef\u4ee5\u5904\u7406 32 \u4f4d\u7684\u6570\u636e\uff0c\u5373 4 \u4e2a\u5b57\u8282\u3002</p> </li> <li> <p>\u65b9\u6cd5</p> </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Cpp/Cpp_primer/#ch2","title":"Ch2 \u53d8\u91cf\u548c\u57fa\u7840\u7c7b\u578b","text":""},{"location":"%E8%AF%AD%E8%A8%80/Cpp/Essential_Cpp/","title":"Essential C++","text":"<p> \u7ea6 124 \u4e2a\u5b57 </p>"},{"location":"%E8%AF%AD%E8%A8%80/Cpp/Essential_Cpp/#ch1","title":"Ch1 \u5f00\u59cb","text":"<ol> <li>\u4e60\u60ef\u4e0a\uff0c\u7a0b\u5e8f\u6267\u884c\u65e0\u8bef\u65f6\u6211\u4eec\u4ee4main()\u8fd4\u56de0\uff0c\u82e5\u8fd4\u56de\u4e00\u4e2a\u975e\u96f6\u503c\uff0c\u8868\u793a\u7a0b\u5e8f\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u9519\u8bef</li> <li> <p>\u4e24\u79cd\u521d\u59cb\u5316\u65b9\u6cd5\uff1a</p> Initialize Note <code>int num_tries = 0;</code> <code>int num_tries(0);</code> \u6784\u9020\u51fd\u6570\u8bed\u6cd5\uff0c\u6b64\u6cd5\u5b58\u5728\u7684\u539f\u56e0\u662f\u5982\u679c\u5bf9\u8c61\u9700\u8981\u591a\u4e2a\u521d\u503c\uff0c \u8fd9\u4e2a\u65b9\u6cd5\u5c31\u6709\u7528\u4e86\uff0c\u4f8b\u5982\u590d\u6570\u9700\u8981\u5b9e\u90e8\u548c\u865a\u90e8 </li> <li> <p>\u8f6c\u4e49\u5b57\u7b26\uff1a</p> \u8f6c\u4e49\u5b57\u7b26 \u542b\u4e49 \\n \u6362\u884c \\t \u5236\u8868\u7b26 \\0 null \\' ' \\'' '' <code>\\\\</code> \\ </li> </ol>"},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonCookBook/","title":"PythonCookBook","text":"<p> \u7ea6 353 \u4e2a\u5b57  49 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>\u5728\u7ebf\u6559\u6750\uff1apython3-cookbook.</p>"},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonCookBook/#_1","title":"\u89e3\u538b\u53ef\u8fed\u4ee3\u5bf9\u8c61\u8d4b\u503c\u7ed9\u591a\u4e2a\u53d8\u91cf","text":"<ul> <li>\u661f\u53f7\u8868\u8fbe\u5f0f\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6bd4\u5982\uff0c\u4f60\u5728\u5b66\u4e60\u4e00\u95e8\u8bfe\u7a0b\uff0c\u5728\u5b66\u671f\u672b\u7684\u65f6\u5019\uff0c \u4f60\u60f3\u7edf\u8ba1\u4e0b\u5bb6\u5ead\u4f5c\u4e1a\u7684\u5e73\u5747\u6210\u7ee9\uff0c\u4f46\u662f\u6392\u9664\u6389\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5206\u6570\uff1a</li> </ul> Python<pre><code>def drop_first_last(grades):\n    first, *middle, last = grades\n    return avg(middle)\n</code></pre>"},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonCookBook/#_2","title":"\u5355\u4e0b\u5212\u7ebf\u548c\u53cc\u4e0b\u5212\u7ebf","text":"<ul> <li>Python\u7a0b\u5e8f\u5458\u4e0d\u53bb\u4f9d\u8d56\u8bed\u8a00\u7279\u6027\u53bb\u5c01\u88c5\u6570\u636e\uff0c\u800c\u662f\u901a\u8fc7\u9075\u5faa\u4e00\u5b9a\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u547d\u540d\u89c4\u7ea6\u6765\u8fbe\u5230\u8fd9\u4e2a\u6548\u679c\u3002 </li> <li>\u7b2c\u4e00\u4e2a\u7ea6\u5b9a\u662f\u4efb\u4f55\u4ee5\u5355\u4e0b\u5212\u7ebf_\u5f00\u5934\u7684\u540d\u5b57\u90fd\u5e94\u8be5\u662f\u5185\u90e8\u5b9e\u73b0\u3002</li> <li>\u4f7f\u7528\u53cc\u4e0b\u5212\u7ebf\u5f00\u59cb\u4f1a\u5bfc\u81f4\u8bbf\u95ee\u540d\u79f0\u53d8\u6210\u5176\u4ed6\u5f62\u5f0f\u3002</li> <li>\u5927\u591a\u6570\u800c\u8a00\uff0c\u4f60\u5e94\u8be5\u8ba9\u4f60\u7684\u975e\u516c\u5171\u540d\u79f0\u4ee5\u5355\u4e0b\u5212\u7ebf\u5f00\u5934\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u6e05\u695a\u4f60\u7684\u4ee3\u7801\u4f1a\u6d89\u53ca\u5230\u5b50\u7c7b\uff0c \u5e76\u4e14\u6709\u4e9b\u5185\u90e8\u5c5e\u6027\u5e94\u8be5\u5728\u5b50\u7c7b\u4e2d\u9690\u85cf\u8d77\u6765\uff0c\u90a3\u4e48\u624d\u8003\u8651\u4f7f\u7528\u53cc\u4e0b\u5212\u7ebf\u65b9\u6848\u3002</li> <li>Reference</li> </ul>"},{"location":"%E8%AF%AD%E8%A8%80/Python/PythonCookBook/#_3","title":"\u88c5\u9970\u5668","text":"<ul> <li> <p>\u4e00\u4e2a\u88c5\u9970\u5668\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u3002 Python<pre><code>import time\nfrom functools import wraps\n\ndef timethis(func): # timethis\u662f\u4e2a\u88c5\u9970\u5668\n    '''\n    Decorator that reports the execution time.\n    '''\n    @wraps(func) # \u4f5c\u7528\u662f\u5c06\u88ab\u88c5\u9970\u51fd\u6570\u7684\u5143\u6570\u636e\uff08\u5982\u51fd\u6570\u540d\u3001\u6587\u6863\u5b57\u7b26\u4e32\u7b49\uff09\u590d\u5236\u5230\n    # \u88c5\u9970\u5668\u5185\u90e8\u7684\u51fd\u6570 wrapper \u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5728\u4f7f\u7528\u88c5\u9970\u5668\u540e\u4e22\u5931\u539f\u51fd\u6570\u7684\u5143\u6570\u636e\u3002\n    def wrapper(*args, **kwargs):\n        start = time.time()\n        result = func(*args, **kwargs)\n        end = time.time()\n        print(func.__name__, end-start)\n        return result\n    return wrapper\n</code></pre> \u8fd9\u4e24\u8005\u7b49\u4ef7\uff1a Python<pre><code>@timethis\ndef countdown(n):\n    while n &gt; 0:\n        n -= 1\n</code></pre> Python<pre><code>def countdown(n):\n    while n &gt; 0:\n        n -= 1\ncountdown = timethis(countdown)\n</code></pre> \u7528\u6cd5\uff1a Python<pre><code>&gt;&gt;&gt; countdown(100000)\ncountdown 0.008917808532714844\n</code></pre></p> </li> <li> <p><code>@property</code> \u662fPython\u4e2d\u7684\u4e00\u79cd\u88c5\u9970\u5668\u8bed\u6cd5\uff0c\u7528\u4e8e\u5b9a\u4e49\u5c5e\u6027\u8bbf\u95ee\u5668\u3002\u5b83\u5141\u8bb8\u4f60\u5c06\u7c7b\u7684\u65b9\u6cd5\u8f6c\u6362\u4e3a\u5c5e\u6027\uff0c\u4ece\u800c\u53ef\u4ee5\u901a\u8fc7\u70b9\u53f7\uff08.\uff09\u64cd\u4f5c\u7b26\u6765\u8bbf\u95ee\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u800c\u4e0d\u9700\u8981\u8c03\u7528\u5b83\u4eec\u3002</p> </li> </ul> Python<pre><code>class Person:\n    def __init__(self, first_name):\n        self._first_name = first_name\n\n    # Getter function\n    @property\n    def first_name(self):\n        return self._first_name # example: a.first_name, note: no () needed\n\n    # Setter function\n    @first_name.setter\n    def first_name(self, value):\n        if not isinstance(value, str):\n            raise TypeError('Expected a string')\n        self._first_name = value\n\n    # Deleter function (optional)\n    @first_name.deleter\n    def first_name(self):\n        raise AttributeError(\"Can't delete attribute\")\n</code></pre>"}]}